{"createdAt":"2025-06-10T20:38:55.160Z","updatedAt":"2025-09-12T20:24:52.000Z","id":"KT5Q2p6ttQTUIEQ5","name":"CB - Busqueda de informacion Boletines SOC","active":true,"isArchived":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"607c48c9-ca46-4a2a-8fb7-d90f0188feab","name":"urls","value":"=[\n  \"https://talosintelligence.com/\",\n  \"https://blog.talosintelligence.com/\",\n  \"https://otx.alienvault.com/\",\n  \"https://threatfox.abuse.ch/\",\n  \"https://www.cisa.gov/news-events/alerts\",\n  \"https://attack.mitre.org/\",\n  \"https://tdm.socprime.com/\"\n]","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[240,-96],"id":"6e5fe6d3-e4da-4a81-bd1f-e9742f38fcd8","name":"Edit Fields","disabled":true},{"parameters":{"options":{"reset":false}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[512,-96],"id":"92454f95-86a9-4e3e-abeb-95951c3a2edd","name":"Loop Over Items"},{"parameters":{"operation":"insert","collection":"reportes_soc","fields":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.mongoDb","typeVersion":1.2,"position":[2176,384],"id":"d7a99a03-2229-43e3-bbc9-6199204db6fc","name":"MongoDB","credentials":{"mongoDb":{"id":"zbcolj89z4clfwzh","name":"CB-MongoDB-Cloud"}}},{"parameters":{"options":{"hl":"en"}},"type":"@n8n/n8n-nodes-langchain.toolSerpApi","typeVersion":1,"position":[1744,432],"id":"f8ee8184-697a-4d3a-8627-6117c195f32a","name":"SerpAPI","credentials":{"serpApi":{"id":"ScTpkOBn8GvsLjdG","name":"SerpApi account"}}},{"parameters":{"promptType":"define","text":"=Has sido encargado de analizar la información contenida en la siguiente página web, obtenida de una búsqueda relacionada con ciberseguridad: {{ $('Loop Over Items').item.json.FIJAS }}.\n\nTu objetivo principal es identificar y extraer **noticias, reportes o análisis detallados sobre ciberataques, brechas de seguridad o incidentes significativos que hayan afectado a empresas o instituciones recientemente**.\n\nSi la página es una herramienta de análisis (como VirusTotal o URLscan.io) y no un portal de noticias o un blog de inteligencia, **prioriza la búsqueda de enlaces o referencias a casos de estudio, blogs de investigación o incidentes específicos** que puedan estar documentados en ella, en lugar de intentar extraer un reporte general. Si no encuentra ninguna referencia directa a un ciberataque significativo o noticia relevante, responda con la frase indicada.\n\nSi se encuentra información relevante sobre un ciberataque, extrae los eventos clave y elabora un resumen detallado.\n\nDevuelve el resultado en formato **Markdown**, con la siguiente estructura clara y útil:\n\n---\n### 🗓 Fecha del Incidente / Publicación:\nIndica la fecha **específica del incidente de ciberseguridad** si está mencionada. Si no, usa la fecha de publicación del artículo o la fecha más relevante para el evento.\n\n---\n### 🌐 Fuente del Reporte:\nIndica la **URL exacta** del reporte o artículo.\n\n---\n### 📝 Resumen del Ciberataque:\nResume los hechos clave de manera concisa y clara. Asegúrate de incluir y destacar:\n- La **Empresa o Institución Afectada** (nombre completo y sector, si es posible).\n- El **Tipo de Ataque Específico** (Ej: ataque de ransomware, explotación de vulnerabilidad de día cero, campaña de phishing dirigida, DDoS, inyección SQL, compromiso de cadena de suministro, etc.).\n- El **Impacto Directo del Ataque** (Ej: filtración de datos sensibles/personales, interrupción prolongada de servicios/operaciones, pérdida financiera significativa, acceso no autorizado a sistemas críticos).\n- Los **Actores de la Amenaza** (si se conocen y mencionan: nombre del grupo de hackers, atribución a un estado, etc.).\n- **Método de Entrada Inicial** (si se detalla: Ej: a través de un correo de phishing, vulnerabilidad en un software específico, credenciales robadas, etc.).\n\n---\n### 📌 Análisis y Conclusiones Clave:\nDescribe el impacto general y las implicaciones del incidente. Incluye:\n- **Lecciones Aprendidas o Recomendaciones** de seguridad derivadas del incidente (si las proporciona el artículo).\n- **Acciones Tomadas** por la empresa afectada o autoridades (Ej: inicio de investigación forense, fortalecimiento de defensas, comunicación con clientes).\n- **Relevancia del Ataque** para el panorama general de la ciberseguridad.\n\n---\n### 🚨 Nivel de Alerta:\nEvalúa el nivel de riesgo o impacto del incidente descrito. Usa uno de los siguientes:\n- **Bajo** 🟢 (Incidente menor, impacto limitado, rápida resolución).\n- **Moderado** 🟡 (Impacto significativo pero controlado, recuperación en curso, no hay amenaza inminente para otros).\n- **Alto** 🔴 (Brecha de datos confirmada, interrupción de servicios crítica, potencial para afectar a terceros).\n- **Crítico** 🔥 (Impacto masivo, amenazas persistentes, ataque en curso con consecuencias graves, afectación a infraestructura crítica o datos de gran volumen/sensibilidad).\n\n### 🚨 Agregar referencia del sitio consultado\n\n---\n\nSi la URL no contiene información directamente útil sobre ciberataques recientes a empresas o instituciones, responde **únicamente** con la siguiente frase:\n\n> **No se encontró información relevante sobre ciberataques en esta URL.**","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[1520,144],"id":"eeb44c72-c4aa-42e6-8da0-26e3111b02f6","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"openai-nano","mode":"list","cachedResultName":"openai-nano"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1488,368],"id":"f473307e-6744-44fd-940c-6eb8cd102ea4","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"S46eGA7oXnm2SZCZ","name":"OpenAi account 2"}}},{"parameters":{"collection":"reportes_soc","options":{}},"type":"n8n-nodes-base.mongoDb","typeVersion":1.2,"position":[1104,-416],"id":"7bb9a1e4-c16f-406f-aef9-6580362806b3","name":"MongoDB1","credentials":{"mongoDb":{"id":"zbcolj89z4clfwzh","name":"CB-MongoDB-Cloud"}}},{"parameters":{"promptType":"define","text":"=Has recibido **múltiples y diversos informes individuales** de ciberseguridad sobre ataques y amenazas recientes. Estos informes están unificados en la siguiente entrada:\n\n**Contenido de los Informes:**\n{{ $json.reporte_ciberseguridad_unificado }}\n\nTu tarea es:\n\n1.  Leer y **analizar CUIDADOSAMENTE TODOS los resúmenes y datos** proporcionados en la sección \"Contenido de los Informes\".\n2.  **Sintetizar y CONSOLIDAR la información de TODOS los informes para detectar patrones comunes, actores de amenazas recurrentes, vectores de ataque prevalentes, industrias más afectadas y cualquier tendencia global significativa en ciberseguridad.**\n3.  Generar un **informe ejecutivo unificado, claro y conciso**, resumiendo los puntos más críticos de todos los reportes, que pueda ser enviado por correo a un equipo de ciberseguridad.\n4.  Presentar el resultado en **formato Markdown**, siguiendo estrictamente la siguiente estructura. Asegúrate de que los detalles del análisis reflejen la **síntesis de MÚLTIPLES ataques/amenazas**, no el análisis de una única URL.\n\n---\n\n## 🛡️ Informe General de Ciberseguridad\n\n\n### 🔍 Análisis Consolidado\nSintetiza los eventos clave de **todos los informes** en un formato ejecutivo, claro y visual.  \n\nReglas de formato (OBLIGATORIAS):\n- Empieza con un bloque **Resumen general** que en 2–3 frases explique la situación global de todos los puntos.  \n- Después, desarrolla cada sección por separado (en el orden dado).  \n- En cada sección incluye:\n  - Una línea que empiece por `**Resumen preliminar:**` (máx. 1 frase).  \n  - Luego, 1–3 viñetas con hallazgos concretos.  \n  - Si no hay datos, escribe:  \n    **Resumen preliminar:** No se identifican datos relevantes  \n    - ⚪ No se identifican datos relevantes  \n- Deja una línea en blanco entre secciones.  \n- No agregues texto fuera de este esquema.  \n\n#### 📝 Resumen general\n[2–3 frases con la visión global de los puntos siguientes]\n\n#### 👥 Actores recurrentes\n**Resumen preliminar:** [frase breve aquí]  \n- [actor o ⚪ No se identifican datos relevantes]  \n\n#### 🛠️ Vectores de ataque comunes\n**Resumen preliminar:** [frase breve aquí]  \n- [vector o ⚪ No se identifican datos relevantes]  \n\n#### 🏭 Industrias afectadas\n**Resumen preliminar:** [frase breve aquí]  \n- [industria o ⚪ No se identifican datos relevantes]  \n\n#### 📉 Impacto general\n**Resumen preliminar:** [frase breve aquí]  \n- [impacto o ⚪ No se identifican datos relevantes]  \n\n#### 📈 Tendencias destacadas\n**Resumen preliminar:** [frase breve aquí]  \n- [tendencia o ⚪ No se identifican datos relevantes]  \n\n\n\n### 📌 Tendencias Relevantes:\n- (Lista de **2 a 5 puntos** con tendencias o patrones detectados a partir de la **consolidación de los informes**; por ejemplo, aumento de ransomware en X sector, nuevas técnicas de phishing, explotación de vulnerabilidades específicas).\n\n### 🚨 Nivel de Alerta General:\n(Selecciona entre Bajo 🟢, Moderado 🟡, Alto 🔴, Crítico 🔥. Basado en la **severidad y frecuencia de las amenazas consolidadas**.)\n\n### 🧠 Recomendaciones Estratégicas:\n- (Incluir **2 o 3 sugerencias de alto nivel** para el equipo de seguridad, aplicables a las tendencias y amenazas consolidadas. Deben ser accionables).\n\n### 🌐 Referencia de donde viene la información\n- Agregar referencias de donde viene la información \n{{ $json.FIJAS }}\n\n### GreyNoise\n- intentemos revisar si hay ips reportadas con indicadores de compromiso publicos y adjunta las ips encontradas ej {ip1, ip2, ip3 ...}\n---\n## Devuelve la respuesta en el siguiente formato JSON:\n\n```json\n{\n  \"markdown\": \"<AQUÍ EL INFORME EN MARKDOWN>\"\n}","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[2080,-464],"id":"4fa80887-514b-447f-8def-db4784b8c404","name":"AI Agent1"},{"parameters":{"model":{"__rl":true,"value":"openai-mini","mode":"list","cachedResultName":"openai-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2032,-240],"id":"a19c310d-7725-4eed-a823-85850076fbf3","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"S46eGA7oXnm2SZCZ","name":"OpenAi account 2"}}},{"parameters":{"toRecipients":"=cbautista@ifxcorp.com","subject":"=Informe General de Ciberseguridad","bodyContent":"={{ $json.html }}","additionalFields":{"bodyContentType":"html"}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[2848,-464],"id":"9a36d084-5d93-474d-8806-a24a7b828fa3","name":"Send Mail","webhookId":"4d4b099c-c77e-49cd-924d-254b0d51e936","credentials":{"microsoftOutlookOAuth2Api":{"id":"zrNdsL9SZMvBfPt3","name":"Microsoft Outlook cbautista"}},"disabled":true},{"parameters":{"jsCode":"// Este código asume que el nodo 'Code' recibe un array de ítems.\n// 'items' es una variable global en n8n que contiene la entrada de datos.\n\nconst allUnifiedSummaries = [];\n\nfor (const item of items) {\n  let currentSummaryParts = [];\n\n  // Obtenemos todas las claves del objeto JSON actual\n  const keys = Object.keys(item.json);\n\n  for (const key of keys) {\n    // Ignoramos la clave '_id' ya que no forma parte del contenido del resumen\n    if (key === '_id') {\n      continue;\n    }\n\n    // Añadimos la clave actual a las partes del resumen\n    // Aquí es donde \"recolectamos\" el texto que está en las claves rotas\n    currentSummaryParts.push(key);\n  }\n\n  // Unimos todas las partes recolectadas con saltos de línea doble para mantener el formato Markdown\n  // Esto reconstruirá el texto completo del resumen a partir de las claves del JSON\n  const unifiedSummary = currentSummaryParts.join('\\n\\n');\n  allUnifiedSummaries.push(unifiedSummary);\n}\n\n// Unimos todos los resúmenes unificados de cada ítem en un solo texto final\n// Si tienes múltiples ítems de entrada (ej. de diferentes URLs), esto los consolidará todos\nconst finalCombinedSummary = allUnifiedSummaries.join('\\n\\n---\\n\\n'); // Separador más claro entre reportes si hay varios\n\n// n8n espera que el nodo Code/Function retorne un array de objetos.\nreturn [\n  {\n    json: {\n      reporte_ciberseguridad_unificado: finalCombinedSummary // La clave ahora contendrá todo el reporte reconstruido\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1392,-448],"id":"c937c890-1ec3-4777-8294-937669cc5f7a","name":"Code1"},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[784,-368],"id":"510c386c-4886-47b4-9d6f-4bffdba08e90","name":"Aggregate"},{"parameters":{"options":{"hl":"en"}},"type":"@n8n/n8n-nodes-langchain.toolSerpApi","typeVersion":1,"position":[992,160],"id":"1e82b8ac-2a8a-41bc-a15f-74c465b0b3f2","name":"SerpAPI1","credentials":{"serpApi":{"id":"ScTpkOBn8GvsLjdG","name":"SerpApi account"}}},{"parameters":{"model":{"__rl":true,"value":"openai-mini","mode":"list","cachedResultName":"openai-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[720,144],"id":"3ebbd59a-6570-46de-a9aa-c9aa5d02e47b","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"S46eGA7oXnm2SZCZ","name":"OpenAi account 2"}}},{"parameters":{"options":{"hl":"en"}},"type":"@n8n/n8n-nodes-langchain.toolSerpApi","typeVersion":1,"position":[1712,-16],"id":"e32ff925-fdaf-4e41-be87-cc509e582c5c","name":"SerpAPI2","credentials":{"serpApi":{"id":"ScTpkOBn8GvsLjdG","name":"SerpApi account"}}},{"parameters":{"promptType":"define","text":"=Has recibido el resultado de un análisis de seguridad de una herramienta especializada, disponible en la siguiente URL o conteniendo la información a continuación: {{ $('Loop Over Items').item.json.url }}\n\nTu objetivo es interpretar este reporte técnico para identificar si el elemento analizado (URL, IP, hash de archivo, dominio, etc.) está asociado con **actividad maliciosa, ciberataques, vulnerabilidades conocidas o compromisos**.\n\nSi el reporte indica actividad maliciosa, extrae los hallazgos clave y elabora un resumen detallado.\n\nDevuelve el resultado en formato **Markdown**, con la siguiente estructura clara y útil:\n\n---\n### 🔍 Elemento Analizado:\nIndica el tipo de elemento (URL, IP, Hash, Dominio) y su valor exacto (Ej: `URL: https://phishing.example.com`).\n\n---\n### 🛠 Herramienta de Análisis:\nMenciona la herramienta utilizada para generar el reporte (Ej: `VirusTotal`, `URLscan.io`, `AbuseIPDB`).\n\n---\n### 📝 Resumen del Análisis de Seguridad:\nResume los hallazgos clave del reporte. Menciona:\n- **Indicación de Maliciosidad:** ¿Es detectado como malicioso, sospechoso, limpio o desconocido?\n- **Detalles Relevantes:** (Según la herramienta)\n    -   Para URLs/Archivos: Detecciones de antivirus, comportamientos observados (Ej: descarga de payload, intentos de phishing, redirecciones), comunicación con C2.\n    -   Para IPs: Número de reportes de abuso, lista negra (blacklist) a la que pertenece, tipo de actividad reportada (Ej: escaneo, botnet, ataque DDoS).\n    -   Para Dominios: Relación con campañas de phishing, registro reciente, uso de certificados sospechosos.\n- **Riesgos Potenciales:** Qué representa este elemento (Ej: vector de infección, servidor de comando y control, infraestructura de phishing).\n\n---\n### 📌 Conclusiones de Seguridad:\nDescribe el impacto de seguridad del hallazgo. Incluye:\n- **Contexto del Riesgo:** ¿A qué tipo de ataque podría estar asociado?\n- **Recomendaciones de Acción:** ¿Qué se debería hacer (Ej: bloquear IP/dominio, eliminar correo, no visitar URL, investigar más a fondo)?\n\n---\n### 🚨 Nivel de Alerta:\nEvalúa el nivel de riesgo del elemento analizado. Usa uno de los siguientes:\n- **Bajo** 🟢 (Elemento limpio o riesgo muy bajo).\n- **Moderado** 🟡 (Sospechoso, poca actividad reportada o hallazgos menores).\n- **Alto** 🔴 (Clara indicación de maliciosidad, múltiples detecciones, alto riesgo).\n- **Crítico** 🔥 (Confirmado como parte de un ataque activo, muy alta probabilidad de compromiso, impacto inminente).\n\n### 🚨 Agregar referencia del sitio consultado\n\n---\n\nSi el reporte no indica actividad maliciosa relevante o no se puede interpretar, responde **únicamente** con la siguiente frase:\n\n> **No se encontró actividad maliciosa relevante en este análisis.**","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[1520,-240],"id":"2ca29332-e19b-400e-b508-9c94b2001981","name":"AI Agent3"},{"parameters":{"model":{"__rl":true,"value":"openai-nano","mode":"list","cachedResultName":"openai-nano"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1488,-48],"id":"a9482e2b-c6ba-4719-a7c5-24bff989ad4f","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"S46eGA7oXnm2SZCZ","name":"OpenAi account 2"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6a14ec99-5c39-4c49-942e-c3786458f966","leftValue":"={{ $json.output }}","rightValue":"True","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1232,-80],"id":"5bc63a78-5a8d-4d95-a78c-06c5c12b1cb4","name":"If"},{"parameters":{"promptType":"define","text":"=Basado en la URL que se te proporcionará, determina su función principal en ciberseguridad.\n\nLa URL a clasificar es: {{ $json.FIJAS }}\n\nResponde con `True` si el sitio es predominantemente una **fuente de publicación de noticias, artículos, análisis o alertas oficiales sobre ciberataques, vulnerabilidades y tendencias**, con contenido curado o redactado para informar.\n\nResponde con `False` si es predominantemente una **herramienta o plataforma interactiva diseñada para buscar, mapear, analizar, escanear o recopilar datos técnicos (como IOCs, IPs, dominios, malware) relacionados con actividades maliciosas o infraestructura**.\n\nTu respuesta debe ser únicamente `True` o `False`.","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[784,-80],"id":"ade3f370-4be5-4907-a7c0-e2238c2ef0ad","name":"Clasificación"},{"parameters":{"jsCode":"/****************************************************************************************\n* SCRIPT 1 — n8n (actualizado)\n* - Indicadores de cabecera: (1) número de referencias según segmento \"🌐 Referencia...\"\n*                           (2) número de vulnerabilidades ALTA según segmento \"🚨 Nivel...\"\n* - Si no hay segmentos, aplica fallback (links / securityData)\n* - Mejora de formato para “Análisis Consolidado” (H3 + iconos + viñetas)\n* - Fecha de emisión en header en formato yyyy-mm-dd\n* - Resumen general (automático si falta) + resumen preliminar por sección\n****************************************************************************************/\n\n/* ===================== Header / Footer helpers ===================== */\nfunction formatearPeriodo(startDate, endDate) {\n  if (!startDate || !endDate) return \"\";\n  const meses = ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];\n  const inicio = new Date(startDate);\n  const fin = new Date(endDate);\n  if (inicio.toDateString() === fin.toDateString()) {\n    return `${inicio.getDate()} de ${meses[inicio.getMonth()]} de ${inicio.getFullYear()}`;\n  } else {\n    return `${inicio.getDate()} de ${meses[inicio.getMonth()]} al ${fin.getDate()} de ${meses[fin.getMonth()]} de ${fin.getFullYear()}`;\n  }\n}\n\nfunction formatISO(date = new Date()) {\n  const pad = (n) => String(n).padStart(2, '0');\n  const d = new Date(date);\n  return `${d.getFullYear()}-${pad(d.getMonth() + 1)}-${pad(d.getDate())}`;\n}\n\nfunction createEmailSafeHeader(startDate, endDate, reportDateISO = null) {\n  const periodText = formatearPeriodo(startDate, endDate);\n  const todayISO = reportDateISO || formatISO();\n  const bg = \"https://media.licdn.com/dms/image/v2/D4E3DAQFqcEmbz29Nmw/image-scale_191_1128/image-scale_191_1128/0/1695664141867/ifx_networks_cover?e=2147483647&v=beta&t=JVG-v8jzdy-D85rsPWHrfn_rzAnV9459-s6uzEw-bPM\";\n  const primaryColor = \"#1a237e\";\n  return `\n  <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: ${primaryColor}; background-image: url('${bg}'); background-size: cover; background-position: right center; margin-bottom: 20px;\">\n    <tr>\n      <td align=\"left\" valign=\"middle\" width=\"120\" style=\"padding: 15px;\">\n        <img src=\"https://github.com/aifx-dev/repo-images/blob/main/Logo_aifx_blanco_circle.png?raw=true\" alt=\"Logo\" style=\"width: 110px; height: auto;\">\n      </td>\n      <td align=\"left\" valign=\"middle\" style=\"padding: 15px;\">\n        <h1 style=\"color: #ffffff; font-size: 28px; font-weight: 800; margin: 0; text-shadow: 1px 1px 3px rgba(0,0,0,0.5);\">BOLETÍN DE CIBERSEGURIDAD</h1>\n        ${periodText ? `<p style=\"color: #ffffff; font-size: 14px; margin: 5px 0 0 0; text-shadow: 1px 1px 2px rgba(0,0,0,0.5);\">Periodo de Consulta: ${periodText}</p>` : ''}\n        <p style=\"color:#ffffff;font-size:12px;margin:6px 0 0 0;text-shadow:1px 1px 2px rgba(0,0,0,0.5);\">Fecha de emisión: <strong>${todayISO}</strong></p>\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"2\" align=\"right\" style=\"padding-right: 15px; padding-bottom: 5px;\">\n        <p style=\"color: #ffffff; font-size: 11px; margin: 0;\">Generated by <i style=\"font-style: italic;\">aifx</i></p>\n      </td>\n    </tr>\n  </table>\n  `;\n}\n\nfunction createEmailFooter() {\n  const secondaryColor = \"#232a34\";\n  return `\n  <div style=\"background:${secondaryColor};color:#e0e0e0;padding:24px 30px;font-size:13px;text-align:left;margin-top:20px;\">\n    <div style=\"font-weight:700;color:#fff;margin-bottom:4px;\">IFX Networks</div>\n    <div style=\"line-height:1.6;\">\n      25 años de experiencia en el mercado de las Telecomunicaciones.<br>\n      Diagonal 97 No. 17 – 60 piso 4, Bogotá, Colombia<br>\n      +57 (601) 369 3000 — CARE: +57 (601) 369 3024\n    </div>\n  </div>`;\n}\n\n/* ===================== Markdown helpers ===================== */\nfunction extractLinksFromMarkdown(markdown) {\n  const links = [];\n  const regex = /\\[(.*?)\\]\\((.*?)\\)/g;\n  let match;\n  while ((match = regex.exec(markdown)) !== null) {\n    links.push(match[2]);\n  }\n  return links;\n}\n\nfunction extractMarkdown(rawOutput) {\n  let markdown = '';\n  if (typeof rawOutput === 'string') {\n    const cleaned = rawOutput.replace(/^\\s*```(?:json|js)?\\s*/im, '').replace(/\\s*```$/m, '').trim();\n    try {\n      const parsed = JSON.parse(cleaned);\n      if (parsed && typeof parsed === 'object' && parsed.markdown) {\n        markdown = parsed.markdown || '';\n      } else {\n        markdown = cleaned;\n      }\n    } catch (err) {\n      markdown = cleaned;\n    }\n  } else if (rawOutput && typeof rawOutput === 'object') {\n    markdown = rawOutput.markdown || '';\n  }\n  return markdown;\n}\n\n/* ===================== Try detect structured security data ===================== */\nfunction tryParseSecurityData(rawOutput) {\n  if (!rawOutput) return null;\n  try {\n    if (typeof rawOutput === 'string') {\n      const s = rawOutput.trim();\n      if (s.startsWith('{') || s.startsWith('[')) {\n        const parsed = JSON.parse(s);\n        if (parsed && parsed.vulnerabilidades && Array.isArray(parsed.vulnerabilidades)) return parsed;\n        if (parsed && parsed.output) {\n          try {\n            const inner = typeof parsed.output === 'string' ? JSON.parse(parsed.output) : parsed.output;\n            if (inner && inner.vulnerabilidades && Array.isArray(inner.vulnerabilidades)) return inner;\n          } catch (e) {}\n        }\n      }\n    } else if (typeof rawOutput === 'object') {\n      if (rawOutput.vulnerabilidades && Array.isArray(rawOutput.vulnerabilidades)) return rawOutput;\n    }\n  } catch (e) {}\n  return null;\n}\n\n/* ===================== New: contar elementos en segmentos específicos del markdown ===================== */\nfunction escapeRegex(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\n/**\n * Busca el encabezado que contiene `segmentTitle` (ignorando niveles de #)\n * y cuenta los elementos de lista (-, *, números) que aparezcan hasta el\n * siguiente encabezado o bloque de sección.\n * Devuelve 0 si no encuentra el segmento.\n */\nfunction countItemsInSegment(markdown, segmentTitle) {\n  if (!markdown || !segmentTitle) return 0;\n  const lines = markdown.split(/\\r?\\n/);\n  const segLower = segmentTitle.trim().toLowerCase();\n\n  let startIndex = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const raw = lines[i].trim();\n    const noHash = raw.replace(/^#+\\s*/, '').trim();\n    if (!noHash) continue;\n    if (noHash.toLowerCase().startsWith(segLower)) {\n      startIndex = i;\n      break;\n    }\n    if (raw.toLowerCase().startsWith(segLower)) {\n      startIndex = i;\n      break;\n    }\n  }\n\n  if (startIndex === -1) return 0;\n\n  let count = 0;\n  for (let j = startIndex + 1; j < lines.length; j++) {\n    const line = lines[j];\n    const trimmed = line.trim();\n    if (trimmed === '') {\n      continue;\n    }\n    if (/^\\s*#{1,6}\\s+/.test(line)) break;\n    if (/^[^\\s].*:$/.test(trimmed) && !/^(?:-|\\*|\\d+\\.)\\s+/.test(trimmed)) break;\n    if (/^\\s*(?:-|\\*|\\+|\\d+\\.)\\s+/.test(line) || /^\\s*[\\u2022\\u2023\\u25E6]\\s+/.test(line)) {\n      count++;\n      continue;\n    }\n    if (/^\\s*[\\p{Emoji_Presentation}\\u{1F300}-\\u{1FAFF}]/u.test(trimmed) && trimmed.length < 120) {\n      count++;\n      continue;\n    }\n    if (/^[-*_]{3,}$/.test(trimmed)) break;\n  }\n\n  return count;\n}\n\n/* ===================== Compute header indicators using the segments ===================== */\nfunction computeHeaderIndicators(markdown, securityData) {\n  const refTitle = '🌐 Referencia de donde viene la información';\n  const altaTitle = '🚨 Nivel de Alerta General:';\n\n  const refsFromSegment = countItemsInSegment(markdown, refTitle);\n  const altaFromSegment = countItemsInSegment(markdown, altaTitle);\n\n  const refsFallback = extractLinksFromMarkdown(markdown).length;\n  let altaFallback = 0;\n  if (securityData && Array.isArray(securityData.vulnerabilidades)) {\n    altaFallback = securityData.vulnerabilidades.reduce((acc, v) => {\n      const c = (v.criticidad || '').toString().toUpperCase();\n      return acc + (c === 'ALTA' ? 1 : 0);\n    }, 0);\n  } else {\n    altaFallback = (markdown.match(/\\bALTA\\b/gi) || []).length;\n  }\n\n  const references = refsFromSegment > 0 ? refsFromSegment : refsFallback;\n  const alta = altaFromSegment > 0 ? altaFromSegment : altaFallback;\n\n  return { references, alta };\n}\n\n/* Render header indicators */\nfunction renderHeaderIndicators(ind) {\n  const refs = ind.references;\n  const alta = ind.alta;\n  const cardStyle = `background-color: #f8f9fa; border-radius: 8px; border: 1px solid #e0e0e0; padding: 15px; text-align: center; font-family: Segoe UI, Roboto, sans-serif;`;\n  const valueStyle = `font-size: 28px; font-weight: 700; color: #0071ce; margin-bottom: 5px;`;\n  const labelStyle = `font-size: 14px; color: #6c757d;`;\n\n  return `\n  <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"10\" style=\"margin-bottom:20px;\">\n    <tr>\n      <td valign=\"top\" style=\"width: 50%;\">\n        <div style=\"${cardStyle}\">\n          <div style=\"${valueStyle}\">${refs}</div>\n          <div style=\"${labelStyle}\">🌐 Referencias</div>\n        </div>\n      </td>\n      <td valign=\"top\" style=\"width: 50%;\">\n        <div style=\"${cardStyle}\">\n          <div style=\"${valueStyle}; color: #dc3545;\">${alta}</div>\n          <div style=\"${labelStyle}\">🚨 Vulnerabilidades (ALTA)</div>\n        </div>\n      </td>\n    </tr>\n  </table>`;\n}\n\n/* ===================== Render security section (omit Fecha del Reporte) ===================== */\nfunction escapeHtml(str) {\n  return String(str || '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nfunction renderSecuritySection(securityData) {\n  if (!securityData || !Array.isArray(securityData.vulnerabilidades)) return '';\n\n  const buckets = { ALTA: [], MEDIA: [], BAJA: [] };\n  securityData.vulnerabilidades.forEach(v => {\n    const c = (v.criticidad || '').toString().toUpperCase();\n    if (c === 'ALTA') buckets.ALTA.push(v);\n    else if (c === 'MEDIA') buckets.MEDIA.push(v);\n    else buckets.BAJA.push(v);\n  });\n\n  let html = `<div style=\"margin-top:18px;\">`;\n\n  ['ALTA', 'MEDIA', 'BAJA'].forEach(level => {\n    const arr = buckets[level];\n    const color = level === 'ALTA' ? '#dc3545' : level === 'MEDIA' ? '#ff9933' : '#28a745';\n    html += `\n      <div style=\"margin-bottom:20px;\">\n        <h3 style=\"margin:0;font-size:18px;color:${color};font-weight:700;padding-bottom:5px;border-bottom:2px solid ${color};\">\n          Criticidad ${level} (${arr.length})\n        </h3>`;\n\n    if (arr.length === 0) {\n      html += `<div style=\"background:#f8f9fa;padding:15px;border-radius:6px;color:#666;font-style:italic;\">No se han detectado vulnerabilidades de este nivel en el dataset.</div>`;\n    } else {\n      arr.forEach(v => {\n        const cvss = (v.cvss === null || v.cvss === undefined || v.cvss === 'TBD') ? 'Pendiente' : v.cvss;\n        const cvssColor = cvss === 'Pendiente' ? '#ff9933' : (cvss >= 7 ? '#dc3545' : cvss >= 4 ? '#ff9933' : '#28a745');\n        const cvssBgColor = cvss === 'Pendiente' ? '#fff5e6' : (cvss >= 7 ? '#ffeaea' : cvss >= 4 ? '#fff5e6' : '#e6f5e6');\n\n        let accionesHTML = '';\n        if (v.acciones_recomendadas && Array.isArray(v.acciones_recomendadas)) {\n          accionesHTML = `<ul style=\"padding-left:20px;margin:6px 0;\">${v.acciones_recomendadas.map(a => `<li>${escapeHtml(String(a))}</li>`).join('')}</ul>`;\n        }\n        let referenciasHTML = '';\n        if (v.referencias && Array.isArray(v.referencias)) {\n          referenciasHTML = `<div style=\"margin-top:6px;\">${v.referencias.map(r => `<a href=\"${r}\" style=\"color:#2c67b2;display:block;word-break:break-all;\">${r}</a>`).join('')}</div>`;\n        }\n\n        html += `\n          <div style=\"border:1px solid #eaeaea;border-radius:8px;padding:20px;margin-top:10px;background:#fff;\">\n            <div style=\"font-weight:700;font-size:15px;color:#2c67b2;margin-bottom:8px;\">${escapeHtml(v.fabricante || 'Fabricante no especificado')}</div>\n            <div style=\"font-size:14px;color:#555;\">\n              <div><strong>CVE:</strong> ${escapeHtml(v.cve || 'N/A')}</div>\n              <div><strong>Producto afectado:</strong> ${escapeHtml(v.producto || 'N/A')}</div>\n              <div style=\"display:inline-block;padding:4px 10px;border-radius:5px;margin-top:8px;background:${cvssBgColor};color:${cvssColor};font-weight:700;\">CVSS: ${escapeHtml(String(cvss))}</div>\n            </div>\n            <div style=\"margin-top:15px;color:#444;\">\n              <div style=\"font-weight:700;margin-bottom:8px;\">Descripción técnica</div>\n              <div style=\"font-size:14px;\">${escapeHtml(v.descripcion || 'No disponible')}</div>\n            </div>\n            <div style=\"margin-top:15px;\">\n              <div style=\"font-weight:700;margin-bottom:8px;\">Acciones recomendadas</div>\n              <div style=\"font-size:14px;\">${accionesHTML || '<div style=\"color:#666;font-style:italic;\">No hay acciones recomendadas.</div>'}</div>\n            </div>\n            <div style=\"margin-top:10px;\">\n              <div style=\"font-weight:700;margin-bottom:8px;\">Referencias</div>\n              <div style=\"font-size:14px;\">${referenciasHTML || '<div style=\"color:#666;font-style:italic;\">No hay referencias.</div>'}</div>\n            </div>\n          </div>`;\n      });\n    }\n\n    html += `</div>`;\n  });\n\n  html += `</div>`;\n  return html;\n}\n\n/* ===================== Embellecedor “Análisis Consolidado” ===================== */\nfunction prettifyConsolidatedSection(md) {\n  if (!md || typeof md !== 'string') return md;\n\n  // Normaliza espacios “pegados” entre secciones enumeradas\n  md = md.replace(/\\s*(\\n)?\\s*(?=1\\.\\s*Actores recurrentes)/i, '\\n\\n');\n  md = md.replace(/\\s*(?=2\\.\\s*Vectores de ataque comunes)/i, '\\n\\n');\n  md = md.replace(/\\s*(?=3\\.\\s*Industrias afectadas)/i, '\\n\\n');\n  md = md.replace(/\\s*(?=4\\.\\s*Impacto general)/i, '\\n\\n');\n  md = md.replace(/\\s*(?=5\\.\\s*Tendencias destacadas)/i, '\\n\\n');\n\n  // Convierte títulos enumerados en encabezados H3 con iconos\n  md = md.replace(/^1\\.\\s*Actores recurrentes:?\\s*$/gmi, '### 👥 Actores recurrentes');\n  md = md.replace(/^2\\.\\s*Vectores de ataque comunes:?\\s*$/gmi, '### 🛠️ Vectores de ataque comunes');\n  md = md.replace(/^3\\.\\s*Industrias afectadas:?\\s*$/gmi, '### 🏭 Industrias afectadas');\n  md = md.replace(/^4\\.\\s*Impacto general:?\\s*$/gmi, '### 📉 Impacto general');\n  md = md.replace(/^5\\.\\s*Tendencias destacadas:?\\s*$/gmi, '### 📈 Tendencias destacadas');\n\n  // Si la línea “No se identifican datos relevantes.” viene pegada al título, forzamos salto y viñeta\n  md = md.replace(/(### [^\\n]+)\\s*-?\\s*No se identifican datos relevantes\\.?/g, '$1\\n\\n- ⚪ No se identifican datos relevantes');\n\n  // Donde aparezca el literal genérico, uniformar con el punto y el icono\n  md = md.replace(/-?\\s*No se identifican datos relevantes\\.?/g, '- ⚪ No se identifican datos relevantes');\n\n  return md.trim();\n}\n\n/* ===================== NUEVO: Forzar esquema \"Resumen preliminar + viñetas\" ===================== */\nfunction ensureSectionMarkdown(md, headerText) {\n  const headerRe = new RegExp(`^###\\\\s+${escapeRegex(headerText)}\\\\s*$`, 'mi');\n  if (!headerRe.test(md)) return md;\n\n  // Extrae bloque de la sección\n  const start = md.search(headerRe);\n  const rest = md.slice(start);\n  const nextHeaderIdx = rest.search(/^\\s*###\\s+/m);\n  const end = nextHeaderIdx > -1 ? start + nextHeaderIdx : md.length;\n\n  const before = md.slice(0, start);\n  const block = md.slice(start, end);\n  const after = md.slice(end);\n\n  let fixed = block;\n\n  // Asegura línea de Resumen preliminar\n  if (!/\\*\\*Resumen preliminar:\\*\\*/i.test(fixed)) {\n    fixed = fixed.replace(/^(###[^\\n]*\\n?)/, `$1\\n**Resumen preliminar:** No se identifican datos relevantes\\n`);\n  }\n\n  // Si no hay viñetas, añade la default\n  const hasBullet = /(^|\\n)-\\s+/.test(fixed);\n  if (!hasBullet) {\n    fixed = fixed.replace(/\\*\\*Resumen preliminar:\\*\\*[^\\n]*\\n?/, (m) => `${m}- ⚪ No se identifican datos relevantes\\n`);\n  }\n\n  // Asegura línea en blanco entre secciones\n  if (!/\\n\\n$/.test(fixed)) fixed = fixed + '\\n';\n\n  return before + fixed + after;\n}\n\nfunction enforceAllSections(md) {\n  const sections = [\n    '👥 Actores recurrentes',\n    '🛠️ Vectores de ataque comunes',\n    '🏭 Industrias afectadas',\n    '📉 Impacto general',\n    '📈 Tendencias destacadas',\n  ];\n  let out = md;\n  sections.forEach(h => { out = ensureSectionMarkdown(out, h); });\n  return out;\n}\n\n/* ===================== NUEVO: Resumen general (auto-inyección si falta) ===================== */\nfunction injectResumenGeneral(md) {\n  if (!md || typeof md !== 'string') return md;\n  if (/^####\\s*📝\\s*Resumen general\\s*$/mi.test(md)) return md; // ya existe\n\n  // Heurística simple: ¿hay al menos una viñeta que NO sea \"⚪ ...\"?\n  const hasFindings = /(^|\\n)-\\s+(?!⚪)/.test(md);\n  const summary = hasFindings\n    ? 'Panorama con hallazgos en al menos una categoría; priorizar mitigaciones y monitoreo continuo.'\n    : 'No se identifican actores, vectores predominantes ni sectores afectados de forma significativa en el periodo analizado.';\n\n  const block = `#### 📝 Resumen general\n${summary}\n\n`;\n  // Inserta al inicio si existe cualquier sección consolidada\n  return block + md;\n}\n\n/* ===================== NUEVO: Sanitizador de viñetas duplicadas/pegadas ===================== */\nfunction sanitizeBullets(md) {\n  if (!md) return md;\n  return md\n    .replace(/-\\s*⚪\\s*-\\s*⚪/g, '- ⚪')              // \"- ⚪- ⚪\" -> \"- ⚪\"\n    .replace(/^-{2,}\\s+/gm, '- ')                   // \"-- \" -> \"- \"\n    .replace(/(#### [^\\n]+)\\s*(?=#### |\\Z)/g, '$1\\n') // asegura salto tras títulos\n    .replace(/(#### [^\\n]+)\\s*-\\s*⚪/g, '$1\\n- ⚪')   // si viñeta pega al título\n    ;\n}\n\n/* ===================== Markdown -> HTML conversion (reused) ===================== */\nfunction convertMarkdownToHtml(markdown) {\n  let html = markdown || '';\n  html = html.replace(/^---\\s*$/gm, '<hr style=\"border:0;height:1px;background-color:#e9ecef;margin:30px 0;\">');\n  html = html.replace(/^(#+)\\s*(.*?)$/gm, (match, hashes, titleText) => {\n    const hLevel = Math.min(hashes.length, 4);\n    const styles = [\n      'font-size:32px;color:#0a1f44;font-weight:800;margin:30px 0 12px;padding-bottom:6px;border-bottom:3px solid #0071ce;line-height:1.2;font-family:Segoe UI,Roboto,sans-serif;',\n      'font-size:28px;color:#123c69;font-weight:700;margin:26px 0 10px;padding-bottom:4px;border-bottom:2px solid #0071ce;line-height:1.2;',\n      'font-size:24px;color:#1a1a1a;font-weight:600;margin:22px 0 8px;padding-bottom:2px;border-bottom:1px solid #ccc;line-height:1.2;',\n      'font-size:22px;color:#333;font-weight:600;margin:18px 0 6px;line-height:1.2;',\n    ];\n    const styleToApply = styles[Math.min(hLevel - 1, styles.length - 1)];\n    return `<h${hLevel} style=\"${styleToApply}\">${titleText}</h${hLevel}>`;\n  });\n  html = html.replace(/\\*\\*(.*?)\\*\\*/g, '<strong style=\"font-weight:bold;color:#041e42;\">$1</strong>');\n  html = html.replace(/\\[(.*?)\\]\\((.*?)\\)/g, '<a href=\"$2\" style=\"color:#0071ce;text-decoration:none;\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\n  html = html.replace(/^- (.*?)$/gm, '<li style=\"margin-bottom:5px;font-size:16px;line-height:1.5;\">$1</li>');\n\n  const groupedLines = [];\n  let inList = false;\n  for (const line of html.split('\\n')) {\n    if (line.trim().startsWith('<li')) {\n      if (!inList) {\n        groupedLines.push('<ul style=\"margin-left:10px;padding-left:20px;margin-bottom:10px;\">');\n        inList = true;\n      }\n      groupedLines.push(line);\n    } else {\n      if (inList) {\n        groupedLines.push('</ul>');\n        inList = false;\n      }\n      groupedLines.push(line);\n    }\n  }\n  if (inList) groupedLines.push('</ul>');\n  html = groupedLines.join('\\n');\n\n  html = html.replace(/((?:^\\|.*\\|\\s*\\n?)+)/gm, (match) => {\n    const rows = match.trim().split('\\n').map((r) => r.trim().split('|').filter((c) => c.trim()));\n    const header = rows[0];\n    const body = rows.slice(1).filter((r) => !r.every((c) => /^-+$/.test(c)));\n    const thead = `<thead><tr>${header.map((h) => `<th style=\"border:1px solid #ccc;padding:8px 12px;text-align:left;background-color:#0071ce;color:#fff;\">${h.trim()}</th>`).join('')}</tr></thead>`;\n    const tbody = `<tbody>${body.map((row) => `<tr>${row.map((c) => `<td style=\"border:1px solid #ccc;padding:8px 12px;text-align:left;\">${c.trim()}</td>`).join('')}</tr>`).join('')}</tbody>`;\n    return `<table style=\"border-collapse:collapse;width:100%;margin:20px 0;font-size:14px;\" class=\"markdown-table\">${thead}${tbody}</table>`;\n  });\n\n  html = html.replace(/\\n\\n+/g, '</p><p style=\"margin-bottom:10px;\">');\n  html = html.replace(/(?<!<\\/h[1-6]>|<hr>|<\\/ul>|<p>)\\n(?!<h[1-6]>|<hr>|<ul>|<p>)/g, '<br/>');\n  if (!html.trim().startsWith('<h') && !html.trim().startsWith('<ul') && !html.trim().startsWith('<table') && !html.trim().startsWith('<hr') && !html.trim().startsWith('<p')) {\n    html = `<p style=\"margin-bottom:10px;\">${html}</p>`;\n  }\n  html = html.replace(/<\\/h[1-6]><br\\/>/g, (m) => m.replace('<br/>','')).replace(/<\\/ul><br\\/>/g,'</ul>').replace(/<\\/p><p style=\"margin-bottom:10px;\">/g,'').replace(/^<p style=\"margin-bottom:10px;\"><\\/p>/,'').replace(/<p style=\"margin-bottom:10px;\"><hr style=\"border:0;height:1px;background-color:#e9ecef;margin:30px 0;\"><\\/p>/g,'<hr style=\"border:0;height:1px;background-color:#e9ecef;margin:30px 0;\">');\n\n  return html;\n}\n\n/* ===================== NUEVO: Resaltar “Resumen general” en HTML ===================== */\nfunction emphasizeResumenGeneral(html) {\n  // Envuelve el bloque que sigue al H4 \"Resumen general\" hasta el siguiente hX en una tarjeta\n  return html.replace(\n    /(<h4[^>]*>.*?Resumen general.*?<\\/h4>)([\\s\\S]*?)(?=<h[1-6][^>]*>|$)/i,\n    (m, h, body) => {\n      return `\n<div style=\"background:#f7fbff;border:1px solid #cfe8ff;border-left:5px solid #2b7bff;border-radius:8px;padding:16px 18px;margin:10px 0 18px 0;\">\n  ${h}\n  <div style=\"font-size:15px;color:#0a1f44;line-height:1.5;\">${body.trim()}</div>\n</div>`;\n    }\n  );\n}\n\n/* ===================== Template builder ===================== */\nfunction formatMarkdownToHtml(markdown, securityData = null, startDate = null, endDate = null, reportDateISO = null) {\n  if (!markdown) markdown = 'No hay contenido para mostrar.';\n  const bodyHtmlRaw = convertMarkdownToHtml(markdown);\n  const bodyHtml = emphasizeResumenGeneral(bodyHtmlRaw); // resalta Resumen general\n  const headerIndicators = computeHeaderIndicators(markdown, securityData);\n  const headerIndicatorsHtml = renderHeaderIndicators(headerIndicators);\n\n  const headerHtml = createEmailSafeHeader(startDate, endDate, reportDateISO);\n  const footerHtml = createEmailFooter();\n  const securitySectionHtml = securityData ? renderSecuritySection(securityData) : '';\n\n  const formattedHTML = `\n<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Informe de Ciberseguridad</title>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\n  body{font-family:Arial,Helvetica,sans-serif;background-color:#f4f6f8;margin:0;color:#2c3e50;}\n  .container{max-width:800px;margin:20px auto;background:#fff;border-radius:8px;box-shadow:0 4px 10px rgba(44,62,80,0.1);overflow:hidden;}\n  .content{padding:28px;}\n  .panel{background:#fff;border-radius:8px;margin-bottom:20px;}\n  .markdown-table th{background-color:#0071ce;color:#fff;}\n  .markdown-table tr:nth-child(even) td{background:#f9f9f9;}\n  h1,h2,h3,h4{font-family:Segoe UI, Roboto, sans-serif;}\n</style>\n</head>\n<body>\n  <div class=\"container\">\n    ${headerHtml}\n    <div class=\"content\">\n      ${headerIndicatorsHtml}\n      ${securitySectionHtml ? `<div class=\"panel\">${securitySectionHtml}</div>` : ''}\n      <div class=\"panel\">\n        ${bodyHtml}\n      </div>\n    </div>\n    ${footerHtml}\n  </div>\n</body>\n</html>`;\n\n  return formattedHTML;\n}\n\n/* ===================== EJECUCIÓN DEL NODO ===================== */\ntry {\n  const raw = $input.first().json.output || $input.first().json.text || $input.first().json;\n  const startDate = $input.first().json.startDate || null;\n  const endDate = $input.first().json.endDate || null;\n  const reportDateISO = formatISO();\n\n  const securityData = tryParseSecurityData(raw);\n  let markdownContent = extractMarkdown(raw);\n\n  // Embellecer “Análisis Consolidado” y forzar esquema\n  markdownContent = prettifyConsolidatedSection(markdownContent);\n  markdownContent = enforceAllSections(markdownContent);\n  markdownContent = injectResumenGeneral(markdownContent);\n  markdownContent = sanitizeBullets(markdownContent);\n\n  const finalHtmlOutput = formatMarkdownToHtml(\n    markdownContent,\n    securityData,\n    startDate,\n    endDate,\n    reportDateISO\n  ) || formatMarkdownToHtml(\n    'No se encontraron eventos significativos para el periodo analizado.',\n    securityData,\n    startDate,\n    endDate,\n    reportDateISO\n  );\n\n  return [{ json: { html: finalHtmlOutput } }];\n} catch (error) {\n  return [{ json: { error: String(error), stack: error && error.stack ? error.stack : undefined } }];\n}\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2528,-464],"id":"c25e513c-4c30-4f1f-8ab1-391a3c48e4ff","name":"Code2"},{"parameters":{"site":{"__rl":true,"value":"ifxusa.sharepoint.com,9f7a3be7-f265-472d-85ff-d6f081d52349,86558bbe-00bf-41ca-a088-a4a5f0b59bf7","mode":"list","cachedResultName":"AIFX"},"folder":{"__rl":true,"value":"01I2YT7B2YKOSZSTW2QFD2KHMUNEBQMUE4","mode":"list","cachedResultName":"BoletinesSoc"},"file":{"__rl":true,"value":"01I2YT7B5KYYPXSTG3BBE27UTZTF6VP4FC","mode":"list","cachedResultName":"FUENTES BOLETINES SOC.xlsx"},"requestOptions":{}},"type":"n8n-nodes-base.microsoftSharePoint","typeVersion":1,"position":[-32,-448],"id":"1eafdad9-d648-4e8c-b471-c369d74c861c","name":"Download file","credentials":{"microsoftSharePointOAuth2Api":{"id":"nR6YLrM1QQAIbs9A","name":"Microsoft SharePoint account"}}},{"parameters":{"operation":"xlsx","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[224,-448],"id":"ba632298-1223-4c05-a78d-6563023dd69d","name":"Extract from File"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-352,-704],"id":"ff5fc5ee-7fe5-4808-95eb-d7162c0c1aa4","name":"When clicking ‘Execute workflow’","disabled":true},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"FIJAS"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[1072,-656],"id":"17173263-1398-4d02-ac9e-fa2ec1264f08","name":"Aggregate1"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1760,-512],"id":"54d2ca33-746c-451f-9077-64361cd33998","name":"Merge"},{"parameters":{"operation":"delete","collection":"reportes_soc"},"type":"n8n-nodes-base.mongoDb","typeVersion":1.2,"position":[2688,-224],"id":"2bb5d184-0bf8-47ff-a075-2843b0cd9f14","name":"Delete documents","credentials":{"mongoDb":{"id":"zbcolj89z4clfwzh","name":"CB-MongoDB-Cloud"}}},{"parameters":{"rule":{"interval":[{"triggerAtHour":4,"triggerAtMinute":5}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-352,-448],"id":"e5daf458-f489-458f-80ea-fb041d1a0192","name":"Schedule Trigger"},{"parameters":{"toRecipients":"ai@ifxcorp.com","subject":"Informe General de Ciberseguridad","bodyContent":"={{ $json.html }}","additionalFields":{"bccRecipients":"avargasl@ifxcorp.com,purbina@ifxcorp.com,jaimep@ifxcorp.com,cbautista@ifxcorp.com","bodyContentType":"html"}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[2848,-672],"id":"677596dd-eaf0-4a24-8baf-ad9ba7d2591e","name":"Mail ai@ifxcorp.com","webhookId":"2452f9ee-6f32-4158-a3f7-17ae677a68a8","credentials":{"microsoftOutlookOAuth2Api":{"id":"zrNdsL9SZMvBfPt3","name":"Microsoft Outlook cbautista"}}}],"connections":{"Edit Fields":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Aggregate","type":"main","index":0}],[{"node":"Clasificación","type":"main","index":0}]]},"MongoDB":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"SerpAPI":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"AI Agent":{"main":[[{"node":"MongoDB","type":"main","index":0}]]},"MongoDB1":{"main":[[{"node":"Code1","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"AI Agent1":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Aggregate":{"main":[[{"node":"MongoDB1","type":"main","index":0}]]},"SerpAPI1":{"ai_tool":[[{"node":"Clasificación","type":"ai_tool","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"Clasificación","type":"ai_languageModel","index":0}]]},"SerpAPI2":{"ai_tool":[[{"node":"AI Agent3","type":"ai_tool","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"AI Agent3","type":"ai_languageModel","index":0}]]},"If":{"main":[[{"node":"AI Agent3","type":"main","index":0}],[{"node":"AI Agent","type":"main","index":0}]]},"AI Agent3":{"main":[[{"node":"MongoDB","type":"main","index":0}]]},"Clasificación":{"main":[[{"node":"If","type":"main","index":0}]]},"Code2":{"main":[[{"node":"Send Mail","type":"main","index":0},{"node":"Delete documents","type":"main","index":0},{"node":"Mail ai@ifxcorp.com","type":"main","index":0}]]},"Download file":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Download file","type":"main","index":0}]]},"Aggregate1":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Merge":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Download file","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"65e9c40a-7483-4515-a0e7-8555bfd6680c","triggerCount":1,"shared":[{"createdAt":"2025-06-10T20:38:55.166Z","updatedAt":"2025-08-13T15:10:47.000Z","role":"workflow:owner","workflowId":"KT5Q2p6ttQTUIEQ5","projectId":"f6RX0bgoA61ZNo42"}],"tags":[]}