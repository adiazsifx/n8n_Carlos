{"createdAt":"2025-08-15T03:03:57.738Z","updatedAt":"2025-10-07T21:23:40.000Z","id":"vO5CCU2KvsDRDOXM","name":"CB - Boletines Diarios Soc NVD","active":true,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $json.concatenated_data }}","options":{"systemMessage":"=ERES UN EXPERTO ANALISTA DE CIBERSEGURIDAD Y TU FUNCI√ìN PRINCIPAL ES ANALIZAR, CLASIFICAR Y RESUMIR REPORTES DE VULNERABILIDADES OBTENIDOS A TRAV√âS DE LA **NVD (NATIONAL VULNERABILITY DATABASE) NIST.GOV**. DEBES PRODUCIR UNA SALIDA **ESTRICTAMENTE EN FORMATO JSON** QUE CUMPLA CON LA ESTRUCTURA PROPORCIONADA M√ÅS ABAJO.\n\n---\n\n### ENCABEZADO OBLIGATORIO ###\nINCLUYE SIEMPRE AL INICIO DE CADA INFORME LA SIGUIENTE L√çNEA EN NEGRITA:\n\n**FUENTE DEL REPORTE: NVD (NATIONAL VULNERABILITY DATABASE) NIST.GOV**\n\n---\n\n### INSTRUCCIONES DE SALIDA ###\n\n1. **CLASIFICA** LAS VULNERABILIDADES EN TRES CATEGOR√çAS BASADAS EN SU CVSS:\n   - üî¥ **CRITICIDAD ALTA**\n   - üü† **CRITICIDAD MEDIA**\n   - üü¢ **CRITICIDAD BAJA**\n\n2. **EXTRAE Y PRESENTA** PARA CADA VULNERABILIDAD LOS SIGUIENTES CAMPOS:\n   - **CVE**\n   - **Fecha del Reporte**\n   - **Fabricante Afectado**\n   - **Producto Afectado**\n   - **CVSS**\n   - **Descripci√≥n T√©cnica**\n   - **Acciones Recomendadas**\n   - **Referencias** (S√ìLO LAS URLS TAL COMO VIENEN, SIN FORMATO EXTRA)\n\n3. AGREGA UNA SECCI√ìN DE **PAUTAS DE ACCI√ìN GENERALES**, CONTENIENDO BUENAS PR√ÅCTICAS DE SEGURIDAD.\n\n4. INCLUYE UNA SECCI√ìN DE **ESTAD√çSTICAS** AL FINAL CON LOS SIGUIENTES CAMPOS:\n   - **Total de Vulnerabilidades**\n   - **Conteo por Criticidad**\n   - **Promedio CVSS**\n\n---\n\n### FORMATO JSON OBLIGATORIO DE SALIDA ###\nDEVUELVE **EXCLUSIVAMENTE** UNA RESPUESTA EN FORMATO JSON, SIENDO OBLGATORIO ESTE ESQUEMA JSON\n\n{\n  \"metadata\": {\n    \"title\": \"\",\n    \"fecha\": \"\",\n    \"fuente\": \"\"\n  },\n  \"vulnerabilidades\": [\n    {\n      \"criticidad\": \"Alta\",\n      \"cve\": \"\",\n      \"fecha_reporte\": \"\",\n      \"fabricante\": \"\",\n      \"producto\": \"\",\n      \"cvss\": null,\n      \"descripcion\": \"\",\n      \"acciones_recomendadas\": [\n        \"\"\n      ],\n      \"referencias\": [\n        \"\"\n      ]\n    },\n    {\n      \"criticidad\": \"Media\",\n      \"cve\": \"\",\n      \"fecha_reporte\": \"\",\n      \"fabricante\": \"\",\n      \"producto\": \"\",\n      \"cvss\": null,\n      \"descripcion\": \"\",\n      \"acciones_recomendadas\": [\n        \"\"\n      ],\n      \"referencias\": [\n        \"\"\n      ]\n    },\n    {\n      \"criticidad\": \"Baja\",\n      \"cve\": \"\",\n      \"fecha_reporte\": \"\",\n      \"fabricante\": \"\",\n      \"producto\": \"\",\n      \"cvss\": null,\n      \"descripcion\": \"\",\n      \"acciones_recomendadas\": [\n        \"\"\n      ],\n      \"referencias\": [\n        \"\"\n      ]\n    }\n  ],\n  \"pautas_generales\": [\n    \"\",\n    \"\"\n  ],\n  \"estadisticas\": {\n    \"total_vulnerabilidades\": null,\n    \"vulnerabilidades_altas\": null,\n    \"vulnerabilidades_medias\": null,\n    \"vulnerabilidades_bajas\": null,\n    \"promedio_cvss\": null\n  }\n}\n\n### CHAIN OF THOUGHTS ###\nSIGUE ESTRICTAMENTE ESTE PROCESO ANTES DE GENERAR LA SALIDA:\n\n1. **ENTENDER**: LEER Y COMPRENDER LA INFORMACI√ìN CRUDA DE LA API DE VULNERS.\n2. **IDENTIFICAR**: EXTRAER LOS CAMPOS RELEVANTES COMO CVE, CVSS, FABRICANTE, ETC.\n3. **CLASIFICAR**: ASIGNAR UNA CATEGOR√çA DE CRITICIDAD BASADA EN EL CVSS.\n4. **ANALIZAR**: EVALUAR IMPACTO, VECTORES Y DETALLES T√âCNICOS RELEVANTES.\n5. **SINTETIZAR**: REDACTAR DESCRIPCIONES Y RECOMENDACIONES CLARAS Y √öTILES.\n6. **ESTRUCTURAR**: ORDENAR LA INFORMACI√ìN EN EL FORMATO JSON DEFINIDO.\n7. **VALIDAR**: ASEGURAR QUE TODAS LAS SECCIONES Y CAMPOS EST√âN COMPLETOS Y CORRECTOS.\n8. **TRADUCIR**: LA DESCRIPCION TECNICA SIEMPRE DEBE SER ENTREGADA EN ESPA√±OL, MANTENIENDO SOLAMENTE LOS TERMINOS TECNICOS EN EL IDIOMA ORIGINAL.\n\n---\n\n### WHAT NOT TO DO ###\n- **NO OMITAS EL ENCABEZADO DE LA FUENTE (API DE LA NATIONAL VULNERABILITY DATABASE DE NIST.GOV)**\n- **NO FUSIONES VULNERABILIDADES DE DIFERENTES NIVELES DE CRITICIDAD EN UNA MISMA ENTRADA**\n- **NO OMITAS CAMPOS COMO FECHA, CVSS, O FABRICANTE**\n- **NO USES DESCRIPCIONES GEN√âRICAS O INEXACTAS**\n- **NO DEJES VAC√çAS LAS ACCIONES RECOMENDADAS**\n- **NO FORMATEES ENLACES COMO MARKDOWN, NI LOS ENCAPSULES ENTRE PAR√âNTESIS O CORCHETES**\n- **NO DEVUELVAS OTRO FORMATO QUE NO SEA EL JSON DEFINIDO**\n- **NO A√ëADAS TEXTO EXTERNO FUERA DE LA RESPUESTA JSON (NI COMENTARIOS, NI CABECERAS EXTRA, NI SALUDOS)**"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[1728,784],"id":"eef8557a-e437-4f8f-a4d8-dad2781e85c8","name":"AI Agent"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=VMware&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,0],"id":"426e13a5-776c-4d0d-bb14-dd9e40362f53","name":"Vmware"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Sophos&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,144],"id":"4fea1360-3d00-4d0a-9c42-333a8dfa3fd0","name":"Sophos"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=HPE&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}\n","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,288],"id":"a079838e-cea2-49be-b280-5609c986352d","name":"HPE"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Veeam&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,432],"id":"de5ce771-f778-4284-bef3-e3036faa7142","name":"Veeam"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Fortinet&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}\n","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,560],"id":"fbbada61-8e47-4a6d-a130-fc2e648ce324","name":"Fortinet"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Cisco&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,704],"id":"55d69e62-feb0-41f6-836e-31ce75d60cf0","name":"Cisco"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Ansible&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,848],"id":"1005eed1-84f4-451a-ab13-f1eb7fe1d167","name":"Ansible"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Kubernetes&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}\n","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,992],"id":"c914ce1b-b791-4068-95cd-fa26b7bdef96","name":"Kubernetes"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=SolarWinds&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,1120],"id":"8829f4cd-a1b2-4230-ac65-5a23b10c1571","name":"SolarWinds"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Acronis&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,1264],"id":"1c6e0c92-8902-4069-b060-19db74be1105","name":"Acronis"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Juniper&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}\n","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,0],"id":"41fa179a-b392-42b8-b826-4fc444468dea","name":"Juniper"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Huawei&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,144],"id":"25c92951-3b80-4d62-b19f-e77ddeec756b","name":"Huawei"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Chrome&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,288],"id":"d9f9e849-0559-4b11-b61f-d02aab3cd7dd","name":"Chrome"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Edge&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,432],"id":"0ec0cd67-3f90-4a4f-a2fd-f80a4ab7b96f","name":"Edge"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Outlook&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,560],"id":"0b1e4a8e-f0a2-4808-961e-bd1fb4591307","name":"Outlook"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Dell&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,704],"id":"008beafe-22cb-469b-9e6c-c4d44aa8094d","name":"Dell"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=IBM&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,848],"id":"ed44415a-f265-49b1-b179-25aa77104297","name":"IBM"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Hitachi&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,992],"id":"894cf4f9-2a46-4adc-9e86-cd874a22949f","name":"Hitachi"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Pure&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,1120],"id":"025f2fd9-f7e1-4b34-874f-8474cd1aa3c7","name":"Pure"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Broadcom&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,1264],"id":"40044357-a090-45d0-aed0-81c7a8f86b8e","name":"Broadcom"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Mikrotik&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,1408],"id":"da4b1d71-6dae-43ad-ac99-8bda7e070f10","name":"Mikrotik"},{"parameters":{"numberInputs":10},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[992,288],"id":"89499577-2884-4dcd-9377-499c21513af8","name":"Grupo 1"},{"parameters":{"numberInputs":9},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[992,784],"id":"4c42c7e3-236e-4d84-b5ef-c4ceea6fb740","name":"Grupo 2"},{"parameters":{"numberInputs":3},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[992,1232],"id":"1ba33e35-2e9e-45c2-8ac9-16539db08eb8","name":"Grupo 3"},{"parameters":{"numberInputs":3},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[1248,784],"id":"eb473c55-a134-46ff-b4cc-07e3bb53327a","name":"Merge"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,0],"id":"e6d978d7-71f9-484d-bfe2-3e9841317b36","name":"If"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,144],"id":"325dd776-0db7-41ca-8bf4-1344a78b24cf","name":"If1"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,288],"id":"fa39cf40-86f5-498f-8ba4-1d40cbd818e5","name":"If2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,432],"id":"5eae0772-2666-4021-8bf9-a993a5af0b4f","name":"If3"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,560],"id":"4294967f-7289-4bd8-a30d-d311734dcbe5","name":"If4"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,704],"id":"77960b33-f4f3-4a44-a8cc-a23e815bc3a8","name":"If5"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,848],"id":"7134a2a4-461d-4f60-b18f-759565b1880d","name":"If6"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,992],"id":"77e375ff-5f89-40b2-a7fa-796988f79901","name":"If7"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,1120],"id":"5897b627-dde8-4f00-8fcb-76ab5e2ffa36","name":"If8"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,1264],"id":"990ceb53-a6dc-4613-bc0e-8800425e88a4","name":"If9"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[192,1408],"id":"c3d3636e-35c4-4daa-b4eb-cd6f513944e2","name":"If10"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,0],"id":"7679497f-3a27-4f2f-bf16-6d1ae036996c","name":"If11"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,144],"id":"7aec25bf-90d8-48bd-aeb9-a7b5855f1e1b","name":"If12"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,288],"id":"e404be3d-1ffd-436c-9f6f-c427441a81ab","name":"If13"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,432],"id":"55d7a9dd-5f1d-4760-ac5e-e8bf40051674","name":"If14"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,560],"id":"bb1978f9-a975-439a-939f-e0ab6819b29e","name":"If15"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,704],"id":"902e0337-4db6-4135-a4f7-f7cd3e752113","name":"If16"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,848],"id":"464b4c14-033c-41cd-a56c-7d9283f14e27","name":"If17"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,992],"id":"bccd2be3-2707-4b63-8af1-729b21a0f59b","name":"If18"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,1120],"id":"e2a2ac85-6694-4640-928d-bb0fe9bb21cb","name":"If19"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,1264],"id":"17b718aa-1f41-4cb4-be00-5d788628d092","name":"If20"},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[1408,784],"id":"714d9b05-6c5c-415d-8fac-7fa08534fbd8","name":"Aggregate"},{"parameters":{"fieldsToSummarize":{"values":[{"aggregation":"concatenate","field":"data","includeEmpty":true,"separateBy":", "}]},"options":{}},"type":"n8n-nodes-base.summarize","typeVersion":1.1,"position":[1568,784],"id":"282b060d-1d90-4a00-a49c-ab74160273de","name":"Summarize"},{"parameters":{"jsCode":"// Funci√≥n para formatear el per√≠odo de fechas\nfunction formatearPeriodo(startDate, endDate) {\n  if (!startDate || !endDate) return \"\";\n  \n  const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n  \n  const inicio = new Date(startDate);\n  const fin = new Date(endDate);\n  \n  // Si son el mismo d√≠a\n  if (inicio.toDateString() === fin.toDateString()) {\n    return `${inicio.getDate()} de ${meses[inicio.getMonth()]} de ${inicio.getFullYear()}`;\n  } else {\n    return `${inicio.getDate()} de ${meses[inicio.getMonth()]} al ${fin.getDate()} de ${meses[fin.getMonth()]} de ${fin.getFullYear()}`;\n  }\n}\n\n// Versi√≥n con header con degradado azul a magenta e informaci√≥n del periodo\nfunction createEmailSafeHeader(date, startDate, endDate) {\n  const periodText = formatearPeriodo(startDate, endDate);\n  const periodInfo = periodText ? `<p style=\"color: #ffffff; font-size: 14px; margin: 5px 0 0 0; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\">Periodo de Consulta: ${periodText}</p>` : '';\n  \n  \n// Usar una imagen de fondo o celdas con colores s√≥lidos en lugar de gradiente\n  // Usar la imagen como fondo con VML para Outlook\n  return `\n  <!--[if gte mso 9]>\n  <v:rect xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"true\" stroke=\"false\" style=\"width:800px;height:150px;\">\n    <v:fill type=\"frame\" src=\"https://media.licdn.com/dms/image/v2/D4E3DAQFqcEmbz29Nmw/image-scale_191_1128/image-scale_191_1128/0/1695664141867/ifx_networks_cover?e=2147483647&v=beta&t=JVG-v8jzdy-D85rsPWHrfn_rzAnV9459-s6uzEw-bPM\" color=\"#1a237e\" />\n    <v:textbox style=\"mso-fit-shape-to-text:true\" inset=\"0,0,0,0\">\n  <![endif]-->\n  <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" background=\"https://media.licdn.com/dms/image/v2/D4E3DAQFqcEmbz29Nmw/image-scale_191_1128/image-scale_191_1128/0/1695664141867/ifx_networks_cover?e=2147483647&v=beta&t=JVG-v8jzdy-D85rsPWHrfn_rzAnV9459-s6uzEw-bPM\" style=\"background-image: url('https://media.licdn.com/dms/image/v2/D4E3DAQFqcEmbz29Nmw/image-scale_191_1128/image-scale_191_1128/0/1695664141867/ifx_networks_cover?e=2147483647&v=beta&t=JVG-v8jzdy-D85rsPWHrfn_rzAnV9459-s6uzEw-bPM'); background-size: cover; background-position: right center; margin-bottom: 20px;\">\n    <tr>\n      <td align=\"left\" valign=\"middle\" width=\"120\" style=\"padding: 15px;\">\n        <img src=\"https://github.com/aifx-dev/repo-images/blob/main/Logo_aifx_blanco_circle.png?raw=true\" alt=\"Logo\" style=\"width: 110px; height: auto;\">\n      </td>\n      <td align=\"left\" valign=\"middle\" style=\"padding: 15px;\">\n        <h1 style=\"color: #ffffff; font-size: 24px; margin: 0; text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\">BOLET√çN DE CIBERSEGURIDAD</h1>\n        <p style=\"color: #ffffff; font-size: 16px; margin: 5px 0 0 0; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\">${date}</p>\n        ${periodInfo}\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"2\" align=\"right\" style=\"padding-right: 15px; padding-bottom: 5px;\">\n        <p style=\"color: #ffffff; font-size: 11px; margin: 0;\">Generated by <i style=\"font-style: italic;\">aifx</i></p>\n      </td>\n    </tr>\n  </table>\n  <!--[if gte mso 9]>\n    </v:textbox>\n  </v:rect>\n  <![endif]-->`\n}\n\n// Funciones auxiliares\nfunction renderStats(vulnerabilidadesPorCriticidad) {\n  const contadores = {\n    'ALTA': vulnerabilidadesPorCriticidad['ALTA'].length,\n    'MEDIA': vulnerabilidadesPorCriticidad['MEDIA'].length,\n    'BAJA': vulnerabilidadesPorCriticidad['BAJA'].length\n  };\n  \n  const totalVulnerabilidades = contadores.ALTA + contadores.MEDIA + contadores.BAJA;\n  \n  return `\n  <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n    <tr>\n      <td style=\"padding: 5px;\">\n        <table width=\"100%\" border=\"0\" cellpadding=\"10\" cellspacing=\"5\" style=\"background-color: #f8f9fa; border-radius: 5px;\">\n          <tr>\n            <td align=\"center\" valign=\"top\" style=\"width: 25%;\">\n              <div style=\"font-size: 24px; font-weight: bold; color: #dc3545; margin-bottom: 5px;\">${contadores.ALTA}</div>\n              <div style=\"font-size: 12px; color: #666;\">Vulnerabilidades de Alta Criticidad</div>\n            </td>\n            <td align=\"center\" valign=\"top\" style=\"width: 25%;\">\n              <div style=\"font-size: 24px; font-weight: bold; color: #ff9933; margin-bottom: 5px;\">${contadores.MEDIA}</div>\n              <div style=\"font-size: 12px; color: #666;\">Vulnerabilidades de Media Criticidad</div>\n            </td>\n            <td align=\"center\" valign=\"top\" style=\"width: 25%;\">\n              <div style=\"font-size: 24px; font-weight: bold; color: #28a745; margin-bottom: 5px;\">${contadores.BAJA}</div>\n              <div style=\"font-size: 12px; color: #666;\">Vulnerabilidades de Baja Criticidad</div>\n            </td>\n            <td align=\"center\" valign=\"top\" style=\"width: 25%;\">\n              <div style=\"font-size: 24px; font-weight: bold; color: #2c67b2; margin-bottom: 5px;\">${totalVulnerabilidades}</div>\n              <div style=\"font-size: 12px; color: #666;\">Total de Vulnerabilidades</div>\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n  </table>`;\n}\n\nfunction generarHTMLVulnerabilidad(vuln) {\n  let cvssColor;\n  let cvssBackColor;\n  let cvssValue;\n  \n  // Manejar el caso especial de CVSS \"TBD\"\n  if (vuln.cvss === \"TBD\" || vuln.cvss === null || vuln.cvss === undefined) {\n    cvssColor = '#ff9933'; // Naranja\n    cvssBackColor = '#fff5e6';\n    cvssValue = \"Pendiente\";\n  } else {\n    // Manejar valores num√©ricos normales\n    if (vuln.cvss >= 7) {\n      cvssColor = '#dc3545';\n      cvssBackColor = '#ffeaea';\n    } else if (vuln.cvss >= 4) {\n      cvssColor = '#ff9933';\n      cvssBackColor = '#fff5e6';\n    } else {\n      cvssColor = '#28a745';\n      cvssBackColor = '#e6f5e6';\n    }\n    cvssValue = vuln.cvss;\n  }\n  \n  // Generar HTML para acciones recomendadas\n  let accionesHTML = '';\n  if (vuln.acciones_recomendadas && vuln.acciones_recomendadas.length > 0) {\n    accionesHTML = vuln.acciones_recomendadas.map(accion => \n      `<li style=\"margin-bottom: 5px;\">${accion}</li>`\n    ).join('');\n  }\n  \n  // Generar HTML para referencias\n  let referenciasHTML = '';\n  if (vuln.referencias && vuln.referencias.length > 0) {\n    referenciasHTML = vuln.referencias.map(ref => \n      `<a href=\"${ref}\" style=\"color: #2c67b2; font-size: 13px; word-break: break-all; display: block; margin-bottom: 5px;\">${ref}</a>`\n    ).join('');\n  }\n  \n  return `\n  <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin-bottom: 20px; border: 1px solid #eaeaea; border-radius: 5px;\">\n    <tr>\n      <td style=\"padding: 15px 20px;\">\n        <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n          <tr>\n            <td>\n              <div style=\"font-weight: bold; font-size: 18px; color: #2c67b2; margin-bottom: 8px;\">${vuln.fabricante || 'Fabricante no especificado'}</div>\n              <div style=\"font-size: 14px; color: #666; margin-top: 5px;\">\n                <span><strong>CVE:</strong> ${vuln.cve}</span><br>\n                <span><strong>Fecha del Reporte:</strong> ${vuln.fecha_reporte}</span><br>\n                <span><strong>Producto Afectado:</strong> ${vuln.producto}</span><br>\n                <span style=\"display: inline-block; padding: 3px 8px; border-radius: 3px; font-weight: bold; font-size: 12px; margin-top: 5px; background-color: ${cvssBackColor}; color: ${cvssColor};\">CVSS: ${cvssValue}</span>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td style=\"padding-top: 15px;\">\n              <table width=\"100%\" border=\"0\" cellpadding=\"12\" cellspacing=\"0\" style=\"background-color: #f8f9fa; border-radius: 5px; margin: 10px 0;\">\n                <tr>\n                  <td>\n                    <div style=\"font-weight: bold; margin-bottom: 5px; color: #555;\">Descripci√≥n T√©cnica</div>\n                    <p>${vuln.descripcion}</p>\n                  </td>\n                </tr>\n              </table>\n            </td>\n          </tr>\n          <tr>\n            <td style=\"padding-top: 15px;\">\n              <div style=\"font-weight: bold; margin-bottom: 5px; color: #555;\">Acciones Recomendadas</div>\n              <ul style=\"padding-left: 25px; margin-bottom: 15px;\">\n                ${accionesHTML}\n              </ul>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div style=\"font-weight: bold; margin-bottom: 5px; color: #555;\">Referencias</div>\n              ${referenciasHTML}\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n  </table>`;\n}\n\n// C√≥digo principal para n8n\nconst items = $input.all();\nconst returnItems = [];\n\nfor (const item of items) {\n  try {\n    // Obtener el per√≠odo desde los par√°metros de entrada (si existen)\n    const startDate = item.json.startDate || null;\n    const endDate = item.json.endDate || null;\n    \n    console.log(\"Per√≠odo recibido:\", { startDate, endDate });\n    \n    // Extraer y parsear los datos JSON\n    let securityData;\n    let outputContent = '';\n    \n    // Verificar si hay datos en el campo 'output'\n    if (item.json.output) {\n      outputContent = item.json.output;\n      \n      // Si el output ya es un objeto, usarlo directamente\n      if (typeof outputContent === 'object' && outputContent !== null) {\n        securityData = outputContent;\n      } \n      // Si es un string, procesar adecuadamente\n      else if (typeof outputContent === 'string') {\n        console.log(\"Output original:\", outputContent.substring(0, 100) + \"...\");\n        \n        // Limpiar el string: eliminar marcadores de c√≥digo y caracteres problem√°ticos\n        let cleanedContent = outputContent;\n        \n        // Eliminar ```json o ``` al inicio\n        if (cleanedContent.trim().startsWith('```json')) {\n          cleanedContent = cleanedContent.replace(/^```json\\s*/m, '');\n        } else if (cleanedContent.trim().startsWith('```')) {\n          cleanedContent = cleanedContent.replace(/^```\\s*/m, '');\n        }\n        \n        // Eliminar ``` al final\n        if (cleanedContent.trim().endsWith('```')) {\n          cleanedContent = cleanedContent.replace(/\\s*```$/m, '');\n        }\n        \n        console.log(\"Contenido limpio de marcadores:\", cleanedContent.substring(0, 100) + \"...\");\n        \n        // Intentar crear un objeto JSON v√°lido\n        try {\n          // Si comienza con asteriscos u otros caracteres no JSON, intentar extraer el JSON\n          if (cleanedContent.includes('{')) {\n            // Buscar el primer '{' y √∫ltimo '}'\n            const startIdx = cleanedContent.indexOf('{');\n            const endIdx = cleanedContent.lastIndexOf('}') + 1;\n            \n            if (startIdx !== -1 && endIdx !== -1 && endIdx > startIdx) {\n              const jsonCandidate = cleanedContent.substring(startIdx, endIdx);\n              console.log(\"Extrayendo JSON entre llaves:\", jsonCandidate.substring(0, 100) + \"...\");\n              securityData = JSON.parse(jsonCandidate);\n            } else {\n              throw new Error(\"No se encontr√≥ una estructura JSON v√°lida en el contenido\");\n            }\n          } else {\n            // Intentar parsear directo si no encontramos problemas evidentes\n            securityData = JSON.parse(cleanedContent);\n          }\n        } catch (e) {\n          console.log('Error al parsear JSON:', e);\n          \n          // Intentar crear un objeto de seguridad b√°sico si no podemos parsear el JSON\n          try {\n            // Extraer secciones relevantes del texto\n            console.log(\"Intentando crear estructura manualmente desde el texto\");\n            \n            // Creamos un objeto b√°sico\n            securityData = {\n              metadata: { fuente: \"Extracci√≥n manual del texto\" },\n              vulnerabilidades: [],\n              pautas_generales: []\n            };\n            \n            // Si podemos extraer vulnerabilidades del texto, lo hacemos\n            // Este es un proceso muy simplificado\n            const vulnSections = cleanedContent.split(/(?:\\r?\\n){2,}/);\n            \n            // Buscar secciones que parecen vulnerabilidades\n            for (const section of vulnSections) {\n              if (section.includes(\"CVE-\") || section.includes(\"vulnerabilidad\") || section.includes(\"criticidad\")) {\n                // Determinar criticidad\n                let criticidad = \"MEDIA\"; // Por defecto\n                if (section.toLowerCase().includes(\"alta\") || section.toLowerCase().includes(\"cr√≠tica\")) {\n                  criticidad = \"ALTA\";\n                } else if (section.toLowerCase().includes(\"baja\")) {\n                  criticidad = \"BAJA\";\n                }\n                \n                // Extraer CVE si existe\n                const cveMatch = section.match(/CVE-\\d{4}-\\d{4,}/);\n                const cve = cveMatch ? cveMatch[0] : \"Sin CVE\";\n                \n                // A√±adir vulnerabilidad b√°sica\n                securityData.vulnerabilidades.push({\n                  criticidad: criticidad,\n                  cve: cve,\n                  descripcion: section.substring(0, 500),\n                  producto: \"Extra√≠do del texto\",\n                  fecha_reporte: new Date().toISOString().split('T')[0],\n                  acciones_recomendadas: [\"Contactar al proveedor para m√°s informaci√≥n\"],\n                  referencias: []\n                });\n              }\n            }\n            \n            // Si no encontramos vulnerabilidades, a√±adir una de muestra\n            if (securityData.vulnerabilidades.length === 0) {\n              securityData.vulnerabilidades.push({\n                criticidad: \"MEDIA\",\n                cve: \"Formato-Desconocido\",\n                descripcion: \"No se pudo extraer informaci√≥n estructurada del texto. Por favor, revise el formato de entrada.\",\n                producto: \"Desconocido\",\n                fecha_reporte: new Date().toISOString().split('T')[0],\n                acciones_recomendadas: [\"Revisar el formato de entrada\"],\n                referencias: []\n              });\n            }\n            \n            // A√±adir pauta general\n            securityData.pautas_generales.push(\n              \"Este reporte fue generado desde un texto no estructurado. Se recomienda revisar el formato de entrada.\"\n            );\n            \n            console.log(\"Creada estructura manual con\", securityData.vulnerabilidades.length, \"vulnerabilidades\");\n            \n          } catch (manualError) {\n            console.log(\"Error al crear estructura manual:\", manualError);\n            throw new Error(`No se pudo procesar el formato de entrada: ${e.message}`);\n          }\n        }\n      } else {\n        throw new Error('El formato del output no es reconocible');\n      }\n    } else {\n      throw new Error('No se encontr√≥ campo \"output\" en los datos de entrada');\n    }\n    \n    console.log(\"Estructura procesada:\", JSON.stringify(securityData).substring(0, 100) + \"...\");\n    \n    // Validar la estructura\n    if (!securityData || !securityData.vulnerabilidades || !Array.isArray(securityData.vulnerabilidades)) {\n      throw new Error('Formato JSON inv√°lido: se requiere un array de vulnerabilidades');\n    }\n    \n    // Asegurarse que metadata existe\n    if (!securityData.metadata) {\n      securityData.metadata = {};\n    }\n    \n    // Normalizar criticidad a may√∫sculas\n    securityData.vulnerabilidades.forEach(vuln => {\n      if (vuln.criticidad) {\n        vuln.criticidad = vuln.criticidad.toUpperCase();\n      }\n    });\n    \n    // Clasificar vulnerabilidades por criticidad\n    const vulnerabilidadesPorCriticidad = {\n      'ALTA': [],\n      'MEDIA': [],\n      'BAJA': []\n    };\n\n    // Procesar cada vulnerabilidad \n    securityData.vulnerabilidades.forEach(vuln => {\n      // Convertir a may√∫sculas y normalizar\n      const criticidad = String(vuln.criticidad || '').toUpperCase();\n      \n      // A√±adir a la categor√≠a apropiada si existe\n      if (criticidad === 'ALTA') {\n        vulnerabilidadesPorCriticidad.ALTA.push(vuln);\n      } else if (criticidad === 'MEDIA') {\n        vulnerabilidadesPorCriticidad.MEDIA.push(vuln);\n      } else if (criticidad === 'BAJA') {\n        vulnerabilidadesPorCriticidad.BAJA.push(vuln);\n      }\n    });\n    \n    // Formatear fecha actual\n    const ahora = new Date();\n    const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n    const fechaFormateada = `${meses[ahora.getMonth()]} ${ahora.getDate()} de ${ahora.getFullYear()}`;\n    \n    // Total de vulnerabilidades\n    const totalVulnerabilidades = securityData.vulnerabilidades.length;\n    \n    // Construir el HTML - usando tablas para compatibilidad con correo\n    let html = `<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Bolet√≠n de Alertas de Ciberseguridad</title>\n</head>\n<body style=\"margin: 0; padding: 0; background-color: #f8f9fa; color: #333; font-family: Arial, sans-serif; line-height: 1.6;\">\n    <div style=\"max-width: 800px; margin: 0 auto; background-color: #ffffff; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\">\n        <!-- Cabecera con gradiente y per√≠odo -->\n        ${createEmailSafeHeader(fechaFormateada, startDate, endDate)}\n        \n        <!-- Contenido -->\n        <div style=\"padding: 30px;\">\n            <div style=\"background-color: #f1f5f9; border-left: 4px solid #2c67b2; padding: 12px 20px; margin-bottom: 25px; font-size: 14px;\">\n                <strong>FUENTE DEL REPORTE:</strong> National Vulnerabilty Database - NIST.GOV\n            </div>\n            \n            <!-- Estad√≠sticas -->\n            ${renderStats(vulnerabilidadesPorCriticidad)}`;\n\n    // Si no hay vulnerabilidades, mostrar mensaje especial\n    if (totalVulnerabilidades === 0) {\n      html += `\n            <div style=\"background-color: #f8f9fa; padding: 30px; margin-bottom: 30px; text-align: center; border-radius: 5px; font-size: 18px;\">\n                <strong>¬°Buenas noticias!</strong><br>No se han detectado vulnerabilidades en el per√≠odo actual.\n            </div>`;\n    } else {\n      // Secci√≥n de Alta Criticidad\n      html += `\n            <div style=\"margin-bottom: 30px;\">\n                <div style=\"display: flex; align-items: center; margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #dee2e6;\">\n                    <div style=\"width: 12px; height: 12px; border-radius: 50%; margin-right: 10px; background-color: #dc3545; display: inline-block;\"></div>\n                    <h2 style=\"font-size: 18px; font-weight: bold; margin: 0;\">CRITICIDAD ALTA</h2>\n                </div>`;\n      \n      if (vulnerabilidadesPorCriticidad['ALTA'].length === 0) {\n        html += `\n                <div style=\"background-color: #f8f9fa; padding: 15px; text-align: center; border-radius: 5px; margin-bottom: 20px; color: #666; font-style: italic;\">\n                    No se han detectado vulnerabilidades de este nivel de criticidad en el per√≠odo actual.\n                </div>`;\n      } else {\n        vulnerabilidadesPorCriticidad['ALTA'].forEach(vuln => {\n          html += generarHTMLVulnerabilidad(vuln);\n        });\n      }\n      \n      html += `\n            </div>`;\n      \n      // Secci√≥n de Media Criticidad\n      html += `\n            <div style=\"margin-bottom: 30px;\">\n                <div style=\"display: flex; align-items: center; margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #dee2e6;\">\n                    <div style=\"width: 12px; height: 12px; border-radius: 50%; margin-right: 10px; background-color: #ff9933; display: inline-block;\"></div>\n                    <h2 style=\"font-size: 18px; font-weight: bold; margin: 0;\">CRITICIDAD MEDIA</h2>\n                </div>`;\n      \n      if (vulnerabilidadesPorCriticidad['MEDIA'].length === 0) {\n        html += `\n                <div style=\"background-color: #f8f9fa; padding: 15px; text-align: center; border-radius: 5px; margin-bottom: 20px; color: #666; font-style: italic;\">\n                    No se han detectado vulnerabilidades de este nivel de criticidad en el per√≠odo actual.\n                </div>`;\n      } else {\n        vulnerabilidadesPorCriticidad['MEDIA'].forEach(vuln => {\n          html += generarHTMLVulnerabilidad(vuln);\n        });\n      }\n      \n      html += `\n            </div>`;\n      \n      // Secci√≥n de Baja Criticidad\n      html += `\n            <div style=\"margin-bottom: 30px;\">\n                <div style=\"display: flex; align-items: center; margin-bottom: 15px; padding-bottom: 8px; border-bottom: 1px solid #dee2e6;\">\n                    <div style=\"width: 12px; height: 12px; border-radius: 50%; margin-right: 10px; background-color: #28a745; display: inline-block;\"></div>\n                    <h2 style=\"font-size: 18px; font-weight: bold; margin: 0;\">CRITICIDAD BAJA</h2>\n                </div>`;\n      \n      if (vulnerabilidadesPorCriticidad['BAJA'].length === 0) {\n        html += `\n                <div style=\"background-color: #f8f9fa; padding: 15px; text-align: center; border-radius: 5px; margin-bottom: 20px; color: #666; font-style: italic;\">\n                    No se han detectado vulnerabilidades de este nivel de criticidad en el per√≠odo actual.\n                </div>`;\n      } else {\n        vulnerabilidadesPorCriticidad['BAJA'].forEach(vuln => {\n          html += generarHTMLVulnerabilidad(vuln);\n        });\n      }\n      \n      html += `\n            </div>`;\n    }\n    \n    // Secci√≥n de Pautas Generales\n    html += `\n            <div style=\"background-color: #f1f5f9; border-radius: 5px; padding: 20px; margin-top: 30px;\">\n                <h3 style=\"font-size: 18px; font-weight: bold; margin-bottom: 15px; color: #1a2e4a;\">PAUTAS DE ACCI√ìN GENERALES</h3>\n                <ol style=\"padding-left: 25px;\">`;\n    \n    if (securityData.pautas_generales && securityData.pautas_generales.length > 0) {\n      securityData.pautas_generales.forEach(pauta => {\n        html += `\n                    <li style=\"margin-bottom: 10px;\">${pauta}</li>`;\n      });\n    } else {\n      html += `\n                    <li style=\"margin-bottom: 10px;\">No hay pautas generales disponibles.</li>`;\n    }\n    \n    html += `\n                </ol>\n            </div>\n        </div>\n        \n        <div style=\"text-align: center; margin-top: 30px;\">\n            <img src=\"https://github.com/ifxnetworks/Ansible/blob/main/Imagen1nnlnl.jpg?raw=true\" alt=\"Pie de p√°gina\" style=\"max-width: 100%; height: auto;\">\n        </div>\n    </div>\n</body>\n</html>`;\n\n    // Incluir los datos JSON en un campo oculto del HTML\n    const jsonScriptTag = `<script id=\"security-data\" type=\"application/json\" style=\"display:none;\">${JSON.stringify(securityData)}</script>`;\n    html = html.replace('</body>', `${jsonScriptTag}</body>`);\n\n    // Devolver un √∫nico output\n    returnItems.push({\n      json: {\n        htmlEmail: html\n      }\n    });\n  } catch (error) {\n    console.log('Error:', error);\n    const errorMessage = error instanceof Error \n      ? error.message \n      : 'Error desconocido';\n    returnItems.push({\n      json: {\n        error: `Error al procesar los datos: ${errorMessage}`\n      }\n    });\n  }\n}\n\nreturn returnItems;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2064,960],"id":"469e5f20-02ae-44e3-ba1c-47007c1daa7f","name":"HTML Create","disabled":true},{"parameters":{"rule":{"interval":[{"triggerAtHour":4}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-768,704],"id":"6d81e86d-aed0-4fd8-94a6-2b22612322ef","name":"Schedule Trigger"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"fe5da3ed-b4de-43af-b4d8-0ebcfef32998","leftValue":"={{ $json.totalResults }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[688,1408],"id":"925bc8da-d33c-43fb-a521-04271c61f786","name":"If21"},{"parameters":{"url":"=https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=Ubiquiti&pubStartDate={{ $json.startDate }}&pubEndDate={{ $json.endDate }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"apiKey","value":"={{ $json.apikey }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[464,1408],"id":"d11eea65-f587-49e1-a5f9-46dfc8b1a2e0","name":"Ubiquiti"},{"parameters":{"jsCode":"// Definir la API key de NVD\nconst apiKey = \"f012052b-8d38-4fb7-a9c6-1b61b590e70f\";\n// Extraer Fecha\nconst now = new Date();\nnow.setUTCDate(now.getUTCDate() - 1); // resta 1 d√≠a\nconst startOfDay = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), 0, 0, 0));\nconst endOfDay = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), 23, 59, 59));\nconst formatISO8601 = (date) => date.toISOString().replace(/\\.\\d{3}Z$/, '.000Z');\nreturn {\n  startDate: formatISO8601(startOfDay),\n  endDate: formatISO8601(endOfDay),\n  apikey: apiKey\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-528,704],"id":"9c1fc91b-9487-49df-963a-7dd5356d30a1","name":"Diary Format Date"},{"parameters":{"jsCode":"const now = new Date();\nconst endDate = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), 23, 59, 59));\nconst startDate = new Date(endDate);\nstartDate.setUTCDate(startDate.getUTCDate() - 7); // resta 7 d√≠as (una semana)\nstartDate.setUTCHours(0, 0, 0, 0); // establece al inicio del d√≠a\n\nconst formatISO8601 = (date) => date.toISOString().replace(/\\.\\d{3}Z$/, '.000Z');\n\nreturn {\n  startDate: formatISO8601(startDate),\n  endDate: formatISO8601(endDate)\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-528,928],"id":"f1344564-d446-4d86-b19d-80e9ecd4138c","name":"Weekly Format Date","disabled":true},{"parameters":{"model":{"__rl":true,"value":"llama-4-Scout","mode":"list","cachedResultName":"llama-4-Scout"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1680,992],"id":"51bae719-ae14-4131-80b3-f19e3ca16c5e","name":"Llama 4 Scout","credentials":{"openAiApi":{"id":"S46eGA7oXnm2SZCZ","name":"OpenAi account 2"}}},{"parameters":{"toRecipients":"cbautista@ifxcorp.com","subject":"Boletin de Vulnerabilidades - NVD NIST.GOV","bodyContent":"={{ $json.htmlEmail }}","additionalFields":{"bodyContentType":"html"}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[3200,512],"id":"ffa9be85-371f-4bdd-a1ba-74bde67207db","name":"Testing Email jaimep@ifxcorp.com","webhookId":"8d78c886-c815-4b16-af7e-fc137fe9fcfa","credentials":{"microsoftOutlookOAuth2Api":{"id":"zrNdsL9SZMvBfPt3","name":"Microsoft Outlook cbautista"}},"disabled":true},{"parameters":{"toRecipients":"ai@ifxcorp.com","subject":"Boletin de Vulnerabilidades - NVD NIST.GOV","bodyContent":"={{ $json.htmlEmail }}","additionalFields":{"bccRecipients":"avargasl@ifxcorp.com,purbina@ifxcorp.com,jaimep@ifxcorp.com,cbautista@ifxcorp.com","bodyContentType":"html"}},"type":"n8n-nodes-base.microsoftOutlook","typeVersion":2,"position":[3200,144],"id":"cb081cb9-ca84-4a3d-ad8d-665df0a8f7d5","name":"Sent Mail ai@ifxcorp.com","webhookId":"8d78c886-c815-4b16-af7e-fc137fe9fcfa","credentials":{"microsoftOutlookOAuth2Api":{"id":"zrNdsL9SZMvBfPt3","name":"Microsoft Outlook cbautista"}}},{"parameters":{"workflowId":{"__rl":true,"value":"2aTmlLQRNtvtjGLK","mode":"list","cachedResultName":"CB - Boletines SOC Diario Vulners"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[464,-240],"id":"158f038f-d4ee-4844-b07e-282da50da6e7","name":"Execute Workflow"},{"parameters":{"promptType":"define","text":"={{ $json.data }}","options":{"systemMessage":"=Eres un EXPERTO ANALISTA DE CIBERSEGURIDAD. Vas a recibir DOS an√°lisis independientes (con la misma estructura): \n1) \"SOC Diario Vulners\" \n2) \"An√°lisis NVI\".\n\nTu tarea: UNIFICAR ambos an√°lisis en un √∫nico **resumen JSON** que tenga SECCIONES SEPARADAS para cada an√°lisis (no mezcles las vulnerabilidades entre secciones). La √öNICA informaci√≥n que debe agregarse (sumarse) entre ambos an√°lisis es **la cantidad de vulnerabilidades**: no concatenes ni fusiones los detalles de las vulnerabilidades, s√≥lo proporciona un conteo consolidado en la parte superior.\n\n**Requerimientos estrictos**\n- La salida debe ser **EXCLUSIVAMENTE** JSON v√°lido (ni texto adicional, ni HTML, ni comentarios).\n- Las descripciones t√©cnicas y recomendaciones deben estar en **espa√±ol** (mant√©n t√©rminos t√©cnicos en su idioma si corresponde).\n- Las referencias deben ser **s√≥lo URLs** (sin markdown, sin etiquetas).\n- Si alg√∫n campo no est√° disponible, usa `null` o `[]` seg√∫n corresponda.\n- Fecha en formato ISO `\"YYYY-MM-DD\"` en los campos `fecha` y `fecha_reporte`.\n- No mezclar vulnerabilidades entre los dos an√°lisis; cada secci√≥n contiene sus propias vulnerabilidades.\n\n**Proceso (qu√© debe hacer la IA, paso a paso)**\n1. Leer ambas entradas.\n2. Validar/extraer los campos obligatorios de cada vulnerabilidad.\n3. Clasificar por criticidad (ALTA / MEDIA / BAJA) basada en CVSS.\n4. No modificar las listas originales de vulnerabilidades: reproducirlas en sus secciones correspondientes.\n5. Calcular estad√≠sticas por secci√≥n (conteos por criticidad, total, promedio CVSS).\n6. Calcular un **conteo consolidado** (suma de totales) y un **desglose consolidado** (suma por criticidad).\n7. Generar el JSON final con el esquema requerido (abajo).\n\n**Esquema JSON de salida (obligatorio)** ‚Äî devuelve exactamente este objeto (rellena con los valores reales):\n\n{\n  \"metadata\": {\n    \"title\": \"Resumen Consolidado de Vulnerabilidades\",\n    \"fecha\": \"YYYY-MM-DD\",\n    \"fuente\": \"Consolidado\"\n  },\n  \"consolidado\": {\n    \"total_vulnerabilidades\": <integer>,           // SUMA de los totales de ambas secciones\n    \"vulnerabilidades_altas\": <integer>,           // SUMA ALTA\n    \"vulnerabilidades_medias\": <integer>,          // SUMA MEDIA\n    \"vulnerabilidades_bajas\": <integer>,           // SUMA BAJA\n    \"promedio_cvss\": <number|null>                 // PROMEDIO CVSS ponderado (null si no hay datos)\n  },\n  \"secciones\": [\n    {\n      \"id\": \"soc_diario_vulners\",\n      \"title\": \"SOC Diario Vulners\",\n      \"metadata\": {\n        \"fecha\": \"YYYY-MM-DD\" | null,\n        \"fuente\": \"Vulners | ‚Ä¶\" | null\n      },\n      \"estadisticas\": {\n        \"total_vulnerabilidades\": <integer>,\n        \"vulnerabilidades_altas\": <integer>,\n        \"vulnerabilidades_medias\": <integer>,\n        \"vulnerabilidades_bajas\": <integer>,\n        \"promedio_cvss\": <number|null>\n      },\n      \"vulnerabilidades\": [\n        {\n          \"criticidad\": \"ALTA\"|\"MEDIA\"|\"BAJA\",\n          \"cve\": \"<string|null>\",\n          \"fecha_reporte\": \"YYYY-MM-DD\" | null,\n          \"fabricante\": \"<string|null>\",\n          \"producto\": \"<string|null>\",\n          \"cvss\": <number|null>,\n          \"descripcion\": \"<texto en espa√±ol>\",\n          \"acciones_recomendadas\": [\"<string>\", \"...\"],\n          \"referencias\": [\"https://...\", \"...\"]   // s√≥lo URLs\n        },\n        ...\n      ],\n      \"pautas_generales\": [\"<string>\", \"...\"]\n    },\n    {\n      \"id\": \"analisis_nvi\",\n      \"title\": \"An√°lisis NVI\",\n      \"metadata\": {\n        \"fecha\": \"YYYY-MM-DD\" | null,\n        \"fuente\": \"NVD | NIST.GOV | ‚Ä¶\" | null\n      },\n      \"estadisticas\": {\n        \"total_vulnerabilidades\": <integer>,\n        \"vulnerabilidades_altas\": <integer>,\n        \"vulnerabilidades_medias\": <integer>,\n        \"vulnerabilidades_bajas\": <integer>,\n        \"promedio_cvss\": <number|null>\n      },\n      \"vulnerabilidades\": [\n        { /* igual estructura que arriba */ }\n      ],\n      \"pautas_generales\": [\"<string>\", \"...\"]\n    }\n  ]\n}\n\n**Reglas y aclaraciones finales**\n- La secci√≥n `consolidado` s√≥lo resume NUM√âRICAMENTE ambas secciones (no duplicar vulnerabilidades, no deduplicar salvo que expl√≠citamente se solicite).\n- `promedio_cvss` se calcula por secci√≥n como el promedio simple de valores CVSS num√©ricos; si CVSS no es num√©rico o inexistente para todas las entradas, devolver `null`. Para el consolidado, calcular promedio ponderado por cantidad de vulnerabilidades con CVSS v√°lido (si no hay valores v√°lidos, `null`).\n- Si encuentras CVSS expresados como objetos (p. ej. `{score:7.8}`) extrae el `score`.\n- Aseg√∫rate que `vulnerabilidades[].referencias` contenga **solo URLs** (extrae y limpia).\n- No agregar texto, encabezados o explicaciones fuera del JSON final.\n\n**Salida**: devuelve **√∫nicamente** el JSON con el esquema exacto arriba llenado.\n\nFIN.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[2448,336],"id":"2e807f8a-ccbb-4227-a103-20c925a5d348","name":"Unificar Reportes"},{"parameters":{"model":{"__rl":true,"value":"llama-4-Scout","mode":"list","cachedResultName":"llama-4-Scout"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2432,592],"id":"eda6d2f5-e117-4516-b984-5746c0c3e803","name":"Llama 4 Scout1","credentials":{"openAiApi":{"id":"S46eGA7oXnm2SZCZ","name":"OpenAi account 2"}}},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[2064,336],"id":"9ebb4af8-37e7-4b76-9b8a-d4619e8afe57","name":"Merge1"},{"parameters":{"jsCode":"// Function node ‚Äî n8n\n// Toma la salida LLM en item.json.output (string con ```json ... ``` o JSON) y genera htmlEmail + summaryJson + conteos\n\n// -------------------- Helpers --------------------\nfunction cleanJsonString(str) {\n¬† if (!str || typeof str !== 'string') return null;\n¬† // Extraer contenido entre ```json ... ``` o entre ``` ... ```\n¬† const mdJson = str.match(/```(?:json)?\\s*([\\s\\S]*?)\\s*```/i);\n¬† if (mdJson && mdJson[1]) return mdJson[1].trim();\n¬† // Si no hay fences, devolver la cadena limpia\n¬† return str.trim();\n}\n\nfunction formatearPeriodo(startDate, endDate) {\n¬† if (!startDate || !endDate) return \"\";\n¬† const meses = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n¬† const inicio = new Date(startDate);\n¬† const fin = new Date(endDate);\n¬† if (inicio.toDateString() === fin.toDateString()) {\n¬† ¬† return `${inicio.getDate()} de ${meses[inicio.getMonth()]} de ${inicio.getFullYear()}`;\n¬† } else {\n¬† ¬† return `${inicio.getDate()} de ${meses[inicio.getMonth()]} al ${fin.getDate()} de ${meses[fin.getMonth()]} de ${fin.getFullYear()}`;\n¬† }\n}\n\nfunction createEmailSafeHeader(date, startDate, endDate) {\n  const periodText = formatearPeriodo(startDate, endDate);\n  const primaryColor = \"#1a237e\";\n  const bg = \"https://media.licdn.com/dms/image/v2/D4E3DAQFqcEmbz29Nmw/image-scale_191_1128/image-scale_191_1128/0/1695664141867/ifx_networks_cover?e=2147483647&v=beta&t=JVG-v8jzdy-D85rsPWHrfn_rzAnV9459-s6uzEw-bPM\";\n  return `\n  <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: ${primaryColor}; background-image: url('${bg}'); background-size: cover; background-position: right center; margin-bottom: 20px;\">\n    <tr>\n      <td align=\"left\" valign=\"middle\" width=\"120\" style=\"padding: 15px;\">\n        <img src=\"https://github.com/aifx-dev/repo-images/blob/main/Logo_aifx_blanco_circle.png?raw=true\" alt=\"Logo\" style=\"width: 110px; height: auto;\">\n      </td>\n      <td align=\"left\" valign=\"middle\" style=\"padding: 15px;\">\n        <h1 style=\"color: #ffffff; font-size: 28px; font-weight: 800; margin: 0; text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\">BOLET√çN DE CIBERSEGURIDAD</h1>\n        ${periodText ? `<p style=\"color: #ffffff; font-size: 14px; margin: 5px 0 0 0; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\">Periodo de Consulta: ${periodText}</p>` : ''}\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"2\" align=\"right\" style=\"padding-right: 15px; padding-bottom: 5px;\">\n        <p style=\"color: #ffffff; font-size: 11px; margin: 0;\">Generated by <i style=\"font-style: italic;\">aifx</i></p>\n      </td>\n    </tr>\n  </table>\n  `;\n}\n\nfunction renderStatsFromCounts(counts) {\n  const alta = counts.alta || 0;\n  const media = counts.media || 0;\n  const baja = counts.baja || 0;\n  const total = alta + media + baja;\n\n  const cardStyle = `background-color: #f8f9fa; border-radius: 8px; border: 1px solid #e0e0e0; padding: 15px; text-align: center; font-family: Segoe UI, Roboto, sans-serif;`;\n  const valueStyle = `font-size: 28px; font-weight: 700; margin-bottom: 5px;`;\n  const labelStyle = `font-size: 14px; color: #6c757d;`;\n\n  return `\n  <table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"10\" style=\"margin-bottom:20px;\">\n    <tr>\n      <td valign=\"top\" style=\"width: 25%;\">\n        <div style=\"${cardStyle}\">\n          <div style=\"${valueStyle}; color: #dc3545;\">${alta}</div>\n          <div style=\"${labelStyle}\">Vulnerabilidades ALTA</div>\n        </div>\n      </td>\n      <td valign=\"top\" style=\"width: 25%;\">\n        <div style=\"${cardStyle}\">\n          <div style=\"${valueStyle}; color: #ff9933;\">${media}</div>\n          <div style=\"${labelStyle}\">Vulnerabilidades MEDIA</div>\n        </div>\n      </td>\n      <td valign=\"top\" style=\"width: 25%;\">\n        <div style=\"${cardStyle}\">\n          <div style=\"${valueStyle}; color: #28a745;\">${baja}</div>\n          <div style=\"${labelStyle}\">Vulnerabilidades BAJA</div>\n        </div>\n      </td>\n      <td valign=\"top\" style=\"width: 25%;\">\n        <div style=\"${cardStyle}\">\n          <div style=\"${valueStyle}; color: #2c67b2;\">${total}</div>\n          <div style=\"${labelStyle}\">Total</div>\n        </div>\n      </td>\n    </tr>\n  </table>`;\n}\n\nfunction generarHTMLVulnerabilidad(vuln) {\n  let cvssVal = vuln.cvss;\n  if (cvssVal && typeof cvssVal === 'object' && 'score' in cvssVal) cvssVal = cvssVal.score;\n  if (cvssVal === null || cvssVal === undefined || cvssVal === 'TBD') cvssVal = \"Pendiente\";\n  const cvssNum = typeof cvssVal === 'number' ? cvssVal : null;\n  let cvssColor, cvssBack;\n\n  if (cvssNum !== null) {\n    if (cvssNum >= 7) { cvssColor = '#dc3545'; cvssBack = '#ffeaea'; }\n    else if (cvssNum >= 4) { cvssColor = '#ff9933'; cvssBack = '#fff5e6'; }\n    else { cvssColor = '#28a745'; cvssBack = '#e6f5e6'; }\n  } else {\n    cvssColor = '#ff9933'; cvssBack = '#fff5e6';\n  }\n\n  const accionesHTML = (vuln.acciones_recomendadas || []).map(a => `<li style=\"margin-bottom:5px;\">${a}</li>`).join('');\n  const referenciasHTML = (vuln.referencias || []).map(r => `<a href=\"${r}\" style=\"color:#2c67b2;display:block;word-break:break-all;margin-bottom:5px;\" target=\"_blank\" rel=\"noopener noreferrer\">${r}</a>`).join('');\n\n  return `\n  <div style=\"margin-bottom:20px;border:1px solid #eaeaea;border-radius:8px;padding:20px;background:#fff;\">\n    <div style=\"font-weight:700;font-size:18px;color:#2c67b2;margin-bottom:8px;\">${vuln.fabricante || 'Fabricante no especificado'}</div>\n    <div style=\"font-size:14px;color:#555;\">\n      <div><strong>CVE:</strong> ${vuln.cve || 'Sin CVE'}</div>\n      <div><strong>Producto Afectado:</strong> ${vuln.producto || 'No especificado'}</div>\n      <div style=\"display:inline-block;padding:4px 10px;border-radius:5px;font-weight:700;font-size:12px;margin-top:8px;background-color:${cvssBack};color:${cvssColor};\">CVSS: ${cvssVal}</div>\n    </div>\n    <div style=\"margin-top:15px;color:#444;\">\n      <div style=\"font-weight:700;margin-bottom:8px;\">Descripci√≥n t√©cnica</div>\n      <p style=\"margin:0;font-size:14px;\">${vuln.descripcion || 'No disponible'}</p>\n    </div>\n    <div style=\"margin-top:15px;\">\n      <div style=\"font-weight:700;margin-bottom:8px;\">Acciones recomendadas</div>\n      <ul style=\"padding-left:20px;margin:0;\">${accionesHTML || '<div style=\"color:#666;font-style:italic;\">No especificadas</div>'}</ul>\n    </div>\n    <div style=\"margin-top:15px;\">\n      <div style=\"font-weight:700;margin-bottom:8px;\">Referencias</div>\n      <div style=\"font-size:14px;\">${referenciasHTML || '<div style=\"color:#666;font-style:italic;\">No hay referencias</div>'}</div>\n    </div>\n  </div>`;\n}\n\n// -------------------- Procesamiento principal --------------------\nconst items = $input.all();\nconst returnItems = [];\n\nfor (const item of items) {\n  try {\n    const rawOutput = item.json.output;\n    if (!rawOutput) throw new Error('No se encontr√≥ campo output en el item');\n\n    const cleaned = cleanJsonString(rawOutput);\n    if (!cleaned) throw new Error('No se pudo limpiar el campo output');\n\n    let parsed;\n    try {\n      parsed = JSON.parse(cleaned);\n    } catch (e) {\n      throw new Error('JSON inv√°lido despu√©s de limpiar el output: ' + e.message);\n    }\n\n    const doc = parsed;\n    if (!doc.secciones || !Array.isArray(doc.secciones)) {\n      throw new Error('El JSON no contiene \"secciones\" como array');\n    }\n\n    let consolidated = doc.consolidado || null;\n    if (!consolidated) {\n      let total = 0, alta = 0, media = 0, baja = 0, cvssSum = 0, cvssCount = 0;\n      for (const sec of doc.secciones) {\n        if (sec.vulnerabilidades && Array.isArray(sec.vulnerabilidades)) {\n          total += sec.vulnerabilidades.length;\n          for (const v of sec.vulnerabilidades) {\n            const c = String(v.criticidad || '').toUpperCase();\n            if (c === 'ALTA') alta++;\n            else if (c === 'MEDIA') media++;\n            else if (c === 'BAJA') baja++;\n            let sc = v.cvss;\n            if (sc && typeof sc === 'object' && 'score' in sc) sc = sc.score;\n            if (typeof sc === 'number' && !isNaN(sc)) { cvssSum += sc; cvssCount++; }\n          }\n        }\n      }\n      consolidated = {\n        total_vulnerabilidades: total,\n        vulnerabilidades_altas: alta,\n        vulnerabilidades_medias: media,\n        vulnerabilidades_bajas: baja,\n        promedio_cvss: cvssCount > 0 ? Math.round((cvssSum / cvssCount) * 100) / 100 : null\n      };\n    }\n\n    let conteoAltas = 0;\n    const referenciasSet = new Set();\n    for (const sec of doc.secciones) {\n      if (sec.vulnerabilidades && Array.isArray(sec.vulnerabilidades)) {\n        for (const v of sec.vulnerabilidades) {\n          if (String(v.criticidad || '').toUpperCase() === 'ALTA') conteoAltas++;\n          if (v.referencias && Array.isArray(v.referencias)) {\n            for (const r of v.referencias) {\n              if (r) referenciasSet.add(r);\n            }\n          }\n        }\n      }\n    }\n    const conteoReferencias = referenciasSet.size;\n\n    const ahora = new Date();\n    const meses = ['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];\n    const fechaFormateada = `${meses[ahora.getMonth()]} ${ahora.getDate()} de ${ahora.getFullYear()}`;\n    const startDate = item.json.startDate || null;\n    const endDate = item.json.endDate || null;\n\n    const headerHtml = createEmailSafeHeader(fechaFormateada, startDate, endDate);\n    const statsHtml = renderStatsFromCounts({\n      alta: consolidated.vulnerabilidades_altas || 0,\n      media: consolidated.vulnerabilidades_medias || 0,\n      baja: consolidated.vulnerabilidades_bajas || 0\n    });\n\n    let bodyHtml = `\n      <div style=\"padding:30px;\">\n        <div style=\"background-color:#f1f5f9;border-left:4px solid #2c67b2;padding:12px 20px;margin-bottom:25px;font-size:14px;border-radius:6px;\">\n          <strong>FUENTE DEL REPORTE:</strong> ${doc.metadata && doc.metadata.fuente ? doc.metadata.fuente : 'Consolidado'}\n        </div>\n        ${statsHtml}\n        <div style=\"font-size:13px;color:#666;text-align:center;margin-bottom:20px;\">\n          <strong>Referencias √∫nicas:</strong> ${conteoReferencias} &nbsp; ‚Ä¢ &nbsp; <strong>Vulnerabilidades ALTA (global):</strong> ${conteoAltas}\n        </div>\n    `;\n\n    for (const sec of doc.secciones) {\n      let secTitle = sec.title || sec.id || 'Secci√≥n';\n      secTitle = secTitle.replace(/\\bNVI\\b/gi, 'NVD');\n\n      const rawFuente = sec.metadata && sec.metadata.fuente ? sec.metadata.fuente : '';\n      let secFuente = rawFuente;\n      if (/nvi/i.test(sec.id || '') || /nvi/i.test(sec.title || '') || /national vulnerability database/i.test(rawFuente) || /nvd/i.test(rawFuente)) {\n        secFuente = 'NVD (National Vulnerability Database) NIST.GOV';\n      } else if (/vulners/i.test(rawFuente) || /vulners/i.test(sec.title || '') || /soc diario vulners/i.test((sec.title||'').toLowerCase())) {\n        secFuente = 'Vulners.com';\n      } else if (!rawFuente) {\n        secFuente = '';\n      }\n\n      const secFecha = sec.metadata && sec.metadata.fecha ? sec.metadata.fecha : '';\n\n      bodyHtml += `\n        <div style=\"margin-bottom:20px;\">\n          <h2 style=\"font-size:24px;font-weight:700;color:#123c69;border-bottom:2px solid #0071ce;padding-bottom:5px;margin:25px 0 20px 0;\">\n            ${secTitle}\n            ${secFuente || secFecha ? `<span style=\"font-size:15px;color:#666;font-weight:400;margin-left:15px;\">${secFuente}${secFuente && secFecha ? ' ‚Ä¢ ' : ''}${secFecha}</span>` : ''}\n          </h2>\n      `;\n\n      if (sec.vulnerabilidades && sec.vulnerabilidades.length > 0) {\n        for (const v of sec.vulnerabilidades) {\n          bodyHtml += generarHTMLVulnerabilidad(v);\n        }\n      } else {\n        bodyHtml += `<div style=\"background:#f8f9fa;padding:15px;border-radius:6px;color:#666;font-style:italic;\">No se reportaron vulnerabilidades en esta secci√≥n.</div>`;\n      }\n\n      if (sec.pautas_generales && sec.pautas_generales.length > 0) {\n        bodyHtml += `\n          <div style=\"background:#f1f5f9;border-radius:6px;padding:15px;margin-top:15px;\">\n            <div style=\"font-weight:700;margin-bottom:8px;\">Pautas generales</div>\n            <ul style=\"margin:0;padding-left:20px;\">\n              ${sec.pautas_generales.map(p => `<li style=\"margin-bottom:6px;\">${p}</li>`).join('')}\n            </ul>\n          </div>\n        `;\n      }\n\n      bodyHtml += `</div><hr style=\"border:0;height:1px;background:#eee;margin:25px 0;\">`;\n    }\n\n    bodyHtml += `</div>`;\n\n    const footerHtml = `\n      <div style=\"background:#232a34;color:#e0e0e0;padding:24px 30px;font-size:13px;text-align:left;margin-top:20px;\">\n        <div style=\"font-weight:700;color:#fff;margin-bottom:4px;\">IFX Networks</div>\n        <div style=\"line-height:1.6;\">\n          25 a√±os de experiencia en el mercado de las Telecomunicaciones.<br>\n          Diagonal 97 No. 17 ‚Äì 60 piso 4, Bogot√°, Colombia<br>\n          +57 (601) 369 3000 ‚Äî CARE: +57 (601) 369 3024\n        </div>\n      </div>\n    `;\n\n    const html = `<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n  <title>Bolet√≠n Consolidado</title>\n  <style>\n    body { font-family: Arial, Helvetica, sans-serif; background-color: #f4f6f8; margin: 0; color: #2c3e50; }\n    .container { max-width: 800px; margin: 20px auto; background: #fff; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 10px rgba(44,62,80,0.1); }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    ${headerHtml}\n    ${bodyHtml}\n    ${footerHtml}\n  </div>\n  <script id=\"security-data\" type=\"application/json\" style=\"display:none;\">${JSON.stringify(doc)}</script>\n</body>\n</html>`;\n\n    const summaryJson = {\n      metadata: doc.metadata || {},\n      consolidado: consolidated,\n      conteos: {\n        conteo_vulnerabilidades_altas: conteoAltas,\n        conteo_referencias: conteoReferencias\n      },\n      secciones: doc.secciones || []\n    };\n\n    returnItems.push({\n      json: {\n        htmlEmail: html,\n        summaryJson,\n        conteo_vulnerabilidades_altas: conteoAltas,\n        conteo_referencias: conteoReferencias\n      }\n    });\n  } catch (err) {\n    returnItems.push({\n      json: {\n        error: err.message || String(err)\n      }\n    });\n  }\n}\n\nreturn returnItems;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2832,336],"id":"089854d3-2a98-4625-8045-18c387652593","name":"HTML Create1"},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[2240,336],"id":"91649707-8306-4216-88b8-8de441436b8b","name":"Aggregate1"}],"connections":{"AI Agent":{"main":[[{"node":"HTML Create","type":"main","index":0},{"node":"Merge1","type":"main","index":1}]]},"Cisco":{"main":[[{"node":"If5","type":"main","index":0}]]},"Vmware":{"main":[[{"node":"If","type":"main","index":0}]]},"Sophos":{"main":[[{"node":"If1","type":"main","index":0}]]},"HPE":{"main":[[{"node":"If2","type":"main","index":0}]]},"Veeam":{"main":[[{"node":"If3","type":"main","index":0}]]},"Fortinet":{"main":[[{"node":"If4","type":"main","index":0}]]},"Ansible":{"main":[[{"node":"If6","type":"main","index":0}]]},"Kubernetes":{"main":[[{"node":"If7","type":"main","index":0}]]},"SolarWinds":{"main":[[{"node":"If8","type":"main","index":0}]]},"Acronis":{"main":[[{"node":"If9","type":"main","index":0}]]},"Juniper":{"main":[[{"node":"If11","type":"main","index":0}]]},"Huawei":{"main":[[{"node":"If12","type":"main","index":0}]]},"Chrome":{"main":[[{"node":"If13","type":"main","index":0}]]},"Edge":{"main":[[{"node":"If14","type":"main","index":0}]]},"Outlook":{"main":[[{"node":"If15","type":"main","index":0}]]},"Dell":{"main":[[{"node":"If16","type":"main","index":0}]]},"IBM":{"main":[[{"node":"If17","type":"main","index":0}]]},"Hitachi":{"main":[[{"node":"If18","type":"main","index":0}]]},"Pure":{"main":[[{"node":"If19","type":"main","index":0}]]},"Broadcom":{"main":[[{"node":"If20","type":"main","index":0}]]},"Mikrotik":{"main":[[{"node":"If10","type":"main","index":0}]]},"Grupo 1":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Grupo 2":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Grupo 3":{"main":[[{"node":"Merge","type":"main","index":2}]]},"Merge":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"If":{"main":[[],[{"node":"Grupo 1","type":"main","index":0}]]},"If1":{"main":[[],[{"node":"Grupo 1","type":"main","index":2}]]},"If2":{"main":[[],[{"node":"Grupo 1","type":"main","index":4}]]},"If3":{"main":[[],[{"node":"Grupo 1","type":"main","index":6}]]},"If4":{"main":[[],[{"node":"Grupo 1","type":"main","index":8}]]},"If5":{"main":[[],[{"node":"Grupo 2","type":"main","index":0}]]},"If6":{"main":[[],[{"node":"Grupo 2","type":"main","index":2}]]},"If7":{"main":[[],[{"node":"Grupo 2","type":"main","index":4}]]},"If8":{"main":[[],[{"node":"Grupo 2","type":"main","index":6}]]},"If9":{"main":[[],[{"node":"Grupo 2","type":"main","index":8}]]},"If10":{"main":[[],[{"node":"Grupo 3","type":"main","index":1}]]},"If11":{"main":[[],[{"node":"Grupo 1","type":"main","index":1}]]},"If12":{"main":[[],[{"node":"Grupo 1","type":"main","index":3}]]},"If13":{"main":[[],[{"node":"Grupo 1","type":"main","index":5}]]},"If14":{"main":[[],[{"node":"Grupo 1","type":"main","index":7}]]},"If15":{"main":[[],[{"node":"Grupo 1","type":"main","index":9}]]},"If16":{"main":[[],[{"node":"Grupo 2","type":"main","index":1}]]},"If17":{"main":[[],[{"node":"Grupo 2","type":"main","index":3}]]},"If18":{"main":[[],[{"node":"Grupo 2","type":"main","index":5}]]},"If19":{"main":[[],[{"node":"Grupo 2","type":"main","index":7}]]},"If20":{"main":[[],[{"node":"Grupo 3","type":"main","index":0}]]},"Aggregate":{"main":[[{"node":"Summarize","type":"main","index":0}]]},"Summarize":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"HTML Create":{"main":[[]]},"Schedule Trigger":{"main":[[{"node":"Diary Format Date","type":"main","index":0},{"node":"Execute Workflow","type":"main","index":0}]]},"Ubiquiti":{"main":[[{"node":"If21","type":"main","index":0}]]},"If21":{"main":[[],[{"node":"Grupo 3","type":"main","index":2}]]},"Diary Format Date":{"main":[[{"node":"Vmware","type":"main","index":0},{"node":"Sophos","type":"main","index":0},{"node":"HPE","type":"main","index":0},{"node":"Veeam","type":"main","index":0},{"node":"Fortinet","type":"main","index":0},{"node":"Cisco","type":"main","index":0},{"node":"Ansible","type":"main","index":0},{"node":"Kubernetes","type":"main","index":0},{"node":"SolarWinds","type":"main","index":0},{"node":"Acronis","type":"main","index":0},{"node":"Mikrotik","type":"main","index":0},{"node":"Juniper","type":"main","index":0},{"node":"Huawei","type":"main","index":0},{"node":"Chrome","type":"main","index":0},{"node":"Edge","type":"main","index":0},{"node":"Outlook","type":"main","index":0},{"node":"Dell","type":"main","index":0},{"node":"IBM","type":"main","index":0},{"node":"Hitachi","type":"main","index":0},{"node":"Pure","type":"main","index":0},{"node":"Broadcom","type":"main","index":0},{"node":"Ubiquiti","type":"main","index":0}]]},"Llama 4 Scout":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Execute Workflow":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Llama 4 Scout1":{"ai_languageModel":[[{"node":"Unificar Reportes","type":"ai_languageModel","index":0}]]},"Merge1":{"main":[[{"node":"Aggregate1","type":"main","index":0}]]},"Unificar Reportes":{"main":[[{"node":"HTML Create1","type":"main","index":0}]]},"HTML Create1":{"main":[[{"node":"Sent Mail ai@ifxcorp.com","type":"main","index":0},{"node":"Testing Email jaimep@ifxcorp.com","type":"main","index":0}]]},"Aggregate1":{"main":[[{"node":"Unificar Reportes","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"4ac10893-58f4-44b6-a0a0-a39901341646","triggerCount":1,"shared":[{"createdAt":"2025-08-15T03:03:57.744Z","updatedAt":"2025-08-15T03:03:57.744Z","role":"workflow:owner","workflowId":"vO5CCU2KvsDRDOXM","projectId":"f6RX0bgoA61ZNo42"}],"tags":[]}